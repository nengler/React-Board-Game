{"version":3,"sources":["components/square.jsx","components/gameBoard.jsx","components/player.jsx","components/treasureChest.jsx","components/inventory.jsx","components/shop.jsx","components/discardCard.jsx","components/restChoice.jsx","components/randomEvent.jsx","components/fightBoard.jsx","constants/moves.jsx","constants/weapons.jsx","constants/monsters.jsx","constants/playerConstant.jsx","constants/showScreen.jsx","components/movesInventory.jsx","constants/treasure.jsx","constants/shop.jsx","constants/boardObject.jsx","constants/activityObject.jsx","constants/monsterContainerObject.jsx","constants/bossContainerObject.jsx","constants/randomEventEnemyContainer.jsx","constants/itemConstants.jsx","constants/randomEvents.jsx","components/game.jsx","App.js","serviceWorker.js","index.js","assets/imgs/sword5.png","assets/imgs/shield3.png"],"names":["square","props","getSquareClass","squareClassName","state","name","isDisabled","this","disabled","className","onClick","handleClick","location","boardWidth","Component","GameBoard","gameBoard","map","index","key","playerMovement","Player","getClassName","healthClassName","currentHealth","maxHealth","playerName","gold","level","TreasureChest","showcaseTreasure","treasure","getTreasure","console","log","onTreasureClick","constructor","manaCost","damage","amountOfHits","synergyItem","conflictCategory","blockAmount","damageMultiplier","blockMultiplier","category","onNoTreasure","inventory","playerInventory","item","onInventoryClick","Shop","getCostClassForItem","itemCost","playersMoney","itemClass","showcaseShop","shop","getShopItems","shopItem","onShopClick","cost","exitShop","discardCard","moveSelectedByIndex","getCardOutlineClass","moveIndex","cardOutlineClassname","getCardClass","moveType","cardClassName","selectCard","setState","moveSelected","weapon","moves","move","onDiscard","restChoice","playerCurrentHealth","player","playerMaxHealth","showFullHealth","showCurrentHealth","document","getElementById","addEventListener","removeEventListener","id","onRestClick","onSmithClick","randomEvent","event","getRandomEvent","description","options","option","onEventClick","effects","fightBoard","getSynergyClassName","moveSynergy","playerWeapon","getConflictClassName","moveConflict","getTextStyle","lengthOfHealthBar","left","offsetWidth","getEnemyMoveStyle","typeStyle","color","getActualDamage","moveAmount","multiplier","Math","floor","ceil","handleDefendClick","currentMana","shield","style","opacity","onBlockCardClick","setTimeout","handleChatBox","handleAttackClick","sword","onAttackCardClick","enemy","handleEndTurn","enemyMove","onEnemyAttack","block","turn","manaClass","getCurrentMove","hpWidth","healthBarWidth","width","backgroundColor","playerMoves","getManaClassForCard","alt","src","maxMana","Move","rarity","Attack","Block","planning","nullBoy","slither","strike","tripleStrike","lowBlow","stab","elbow","sideLunge","runningLunge","crossSwipe","weaponBash","kneeBreaker","bruteCharge","quickScratch","bloodyMess","defend","blockStance","wall","quickBlock","parry","barricade","dualBlock","playerMoveArray","Weapon","teeth","dagger","claws","longSword","weaponArray","Monster","monsterMoves","isABoss","moneyDropRange","monsterMoveIndex","newBlock","random","enemies","bosses","randomEventMonsters","playerPosition","newName","push","goldAdded","goldToRemove","newPosition","newWeapon","oldWeapon","splice","newMove","potion","affect","moveToDiscard","parseFloat","toFixed","healthIncreasedBy","screen","createCharacter","characterMoving","characterFighting","characterEvent","characterRewards","characterShop","characterDiscardCard","characterRest","goToNextFloor","characterDied","Object","keys","forEach","makeAllValuesFalse","MovesInventory","commonTreasure","commonIndex","rareTreasure","rareIndex","getTypeOfTreasure","amountToShow","items","shuffleTreasure","treasureArray","i","length","j","temp","retTreasure","treasureBySpecifiedType","undefined","amount","shopItems","itemIndex","itemsToShow","isStillInShop","shuffleShop","itemArray","retItems","boardObject","height","board","Array","fill","bossPosition","position","increaseDimensions","activityObject","bigActivitiesArray","activityArray","activityIndex","bigIndex","iterationAmount","MonsterContainerObject","monsterArray","lastMonster","monsters","monster","isUniqueMonster","retMonster","BossContainerObject","RandomEventEnemyContainer","Potion","healingPotion","RandomEventHolder","randomEvents","randomEventIndex","RandomEvents","heavySmither","randomWeaponNumbers","getRandomNumbers","salesMan","randomMoveNumbers","lengthOfArray","keepLooping","randomNumbers","randomNumber","randomEventHolder","Game","enemiesContainer","bossContainer","randomEventEnemiesContainer","currentEnemy","chatMessage","handleChange","setPlayerName","target","value","startGame","addMonsters","addEnemies","itemsArray","itemsToAddToTreasure","itemsToAddToShop","moveCharacter","createFloor","randomizeEvents","addToChatBox","message","textarea","scrollTop","scrollHeight","handleSquareProperty","increaseGold","showRandomEvent","fightScreen","cloneDeep","getMonster","getCurrentLevel","showRewads","showCommon","amountToBeShown","showShop","characterRestChoice","boss","getEnemy","showOptionToGoToNextFloor","checkIfLegalMovement","proposedPosition","handleMovement","movePlayer","checkIfLegalSquare","arrowKeyMovement","e","handleInventoryClick","drinkPotion","changeWeaponFromMenu","handleEnemyCard","playersBlock","enemyWeapon","handleEnemyAttack","handleEnemyBlock","handleBlockCardClick","playerMove","calculateBlock","addBlock","decreaseCurrentMana","handleAttackCardClick","calculateDamage","enemyBlock","resetBlock","setBlock","checkIfDead","handleEnemyDeath","endTurn","handleDiscard","handleTreasureClick","treasureItem","addMove","handlePlayerInventory","changeWeapon","endRewards","increaseIndex","handleNoTreasureClick","handleShopClick","stillInShop","decreaseGold","decreaseItemsToShow","handleExitShopClick","resetItemsToShow","leaveShop","handleRestClick","fullHeal","handleSmithClick","weaponName","improveWeapon","handleRandomEventClick","eventAction","eventCategory","backToBoard","stayInEvent","heavySmith","handlePlayerDeath","characterDeath","increaseHealth","addToInventory","increaseRandomEventCounter","handleGoToNextFloor","nextLevel","handleCancelGoingToNextFloor","contactMe","playAgain","startANewGame","directions","randomizer","direction","stepDirections","substr","swapIndex","indexOf","activitiesObject","createDirections","step","changeBoardSquare","getActivity","getBigActivity","resetActivitiesIndex","startingValue","greaterThanValue","iterationValue","bossSpacer","bossPlacement","bossIndex","setBossPosition","primaryDirections","includes","handlePrimaryIterations","secondaryDirection","bigActivities","spacesPerDirection","addToArrayXTimes","createPath","connectPrimaries","boardDirections","getDirections","toString","randomNumberOneOrTwo","createBoard","health","goToNextMove","increaseBlock","getMoneyDropped","showRare","disableStart","type","onChange","placeholder","onKeyPress","rows","App","Boolean","window","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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gJ,SAEtD,0BAAMxI,UAAU,iBACd,qCADF,IACiBF,KAAKN,MAAMoI,a,GArUbvH,aCJnBoI,EACJ,WACE7I,EACAyF,EACAzD,EACAG,EACAC,EACA0G,EACAtF,GACC,oBACDtD,KAAKF,KAAOA,EACZE,KAAKuF,YAAcA,EACnBvF,KAAK8B,SAAWA,EAChB9B,KAAKiC,YAAcA,EACnBjC,KAAKkC,iBAAmBA,EACxBlC,KAAK4I,OAASA,EACd5I,KAAKsD,KAAOA,GAIVuF,E,kDACJ,WACE/I,EACAyF,EACAzD,EACAG,EACAC,EACA0G,EACAtF,EACAvB,EACAC,GACC,IAAD,8BACA,cACElC,EACAyF,EACAzD,EACAG,EACAC,EACA0G,EACAtF,IAEGvB,OAASA,EACd,EAAKC,aAAeA,EAXpB,E,UAXiB2G,GA0BfG,E,kDACJ,WACEhJ,EACAyF,EACAzD,EACAG,EACAC,EACA0G,EACAtF,EACAnB,GACC,IAAD,8BACA,cACErC,EACAyF,EACAzD,EACAG,EACAC,EACA0G,EACAtF,IAEGnB,YAAcA,EAVnB,E,UAVgBwG,GA0BPI,EAAW,IAAIF,EAC1B,WACA,GACA,EACA,OACA,OACA,SACA,IACA,EACA,GAGWG,EAAU,IAAIH,EACzB,WACA,mBACA,EACA,GACA,GACA,SACA,EACA,EACA,GAGWI,EAAU,IAAIJ,EACzB,UACA,gBACA,EACA,GACA,GACA,SACA,EACA,EACA,GAGWK,EAAS,IAAIL,EACxB,SACA,iKACA,EACA,QACA,aACA,gBACA,EACA,EACA,GAGWM,EAAe,IAAIN,EAC9B,gBACA,mDACA,EACA,SACA,YACA,OACA,IACA,EACA,GAGWO,EAAU,IAAIP,EACzB,WACA,sBACA,EACA,SACA,aACA,SACA,GACA,EACA,GAGWQ,EAAO,IAAIR,EACtB,OACA,gBACA,EACA,QACA,eACA,SACA,GACA,GACA,GAGWS,EAAQ,IAAIT,EACvB,QACA,GACA,EACA,OACA,OACA,SACA,GACA,EACA,GAGWU,EAAY,IAAIV,EAC3B,aACA,YACA,EACA,aACA,eACA,OACA,IACA,EACA,GAGWW,EAAe,IAAIX,EAC9B,gBACA,YACA,EACA,aACA,aACA,OACA,IACA,GACA,GAGWY,EAAa,IAAIZ,EAC5B,cACA,YACA,EACA,aACA,eACA,SACA,GACA,EACA,GAGWa,EAAa,IAAIb,EAC5B,cACA,8BACA,EACA,cACA,eACA,SACA,GACA,EACA,GAGWc,EAAc,IAAId,EAC7B,eACA,2BACA,EACA,iBACA,aACA,SACA,GACA,EACA,GAGWe,EAAc,IAAIf,EAC7B,eACA,wBACA,EACA,iBACA,aACA,SACA,GACA,EACA,GAGWgB,EAAe,IAAIhB,EAC9B,gBACA,GACA,EACA,QACA,aACA,SACA,GACA,EACA,GAGWiB,EAAa,IAAIjB,EAC5B,cACA,GACA,EACA,QACA,eACA,OACA,IACA,EACA,GAIWkB,EAAS,IAAIjB,EACxB,SACA,qBACA,EACA,cACA,aACA,gBACA,EACA,GAGWkB,EAAc,IAAIlB,EAC7B,eACA,0BACA,EACA,QACA,aACA,SACA,GACA,GAGWmB,EAAO,IAAInB,EACtB,OACA,2BACA,EACA,cACA,eACA,SACA,GACA,IAGWoB,EAAa,IAAIpB,EAC5B,cACA,KACA,EACA,iBACA,aACA,OACA,GACA,GAGWqB,EAAQ,IAAIrB,EACvB,QACA,KACA,EACA,SACA,aACA,OACA,GACA,GAGWsB,EAAY,IAAItB,EAC3B,YACA,KACA,EACA,cACA,gBACA,OACA,IACA,IAGWuB,EAAY,IAAIvB,EAC3B,aACA,MACA,EACA,QACA,eACA,OACA,IACA,IAGWwB,GAAkB,CAC7BnB,EACAE,EACAD,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,GCxWIE,GACJ,WAAYzK,EAAMsC,EAAkBC,EAAiBuG,EAAQtF,EAAMhB,GAAW,oBAC5EtC,KAAKF,KAAOA,EACZE,KAAKoC,iBAAmBA,EACxBpC,KAAKqC,gBAAkBA,EACvBrC,KAAK4I,OAASA,EACd5I,KAAKsD,KAAOA,EACZtD,KAAKsC,SAAWA,GAKPkI,GAAQ,IAAID,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","file":"static/js/main.3d8dfa70.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass square extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: this.props.square\r\n    };\r\n  }\r\n  getSquareClass = () => {\r\n    let squareClassName = \"square \";\r\n    if (this.state.name === \"\") {\r\n      squareClassName += \"transparent-box\";\r\n    } else {\r\n      squareClassName += \"primary-box \";\r\n      if (this.props.square === \"🧑\") {\r\n        squareClassName += \"player-box\";\r\n      }\r\n    }\r\n    return squareClassName;\r\n  };\r\n  render() {\r\n    const isDisabled = this.props.square === \"\";\r\n    return (\r\n      <span>\r\n        <button\r\n          disabled={isDisabled}\r\n          className={this.getSquareClass()}\r\n          onClick={() => {\r\n            this.props.handleClick(this.props.location, this.props.square);\r\n          }}\r\n        >\r\n          {this.props.square}\r\n        </button>\r\n        {(this.props.location + 1) % this.props.boardWidth === 0 && <br />}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default square;\r\n","import React, { Component } from \"react\";\r\nimport Square from \"./square\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nclass GameBoard extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.gameBoard.map((square, index) => (\r\n          <Square\r\n            key={index}\r\n            square={square}\r\n            location={index}\r\n            boardWidth={this.props.boardWidth}\r\n            handleClick={this.props.playerMovement}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameBoard;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Player extends Component {\r\n  state = {};\r\n\r\n  getClassName = () => {\r\n    let healthClassName = \"player-health \";\r\n    if (this.props.currentHealth > this.props.maxHealth / 2) {\r\n      healthClassName += \"good-health\";\r\n    } else {\r\n      healthClassName += \"bad-health\";\r\n    }\r\n    return healthClassName;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"player-info\">\r\n        <span>\r\n          <b>Name:</b> {this.props.playerName}\r\n        </span>\r\n        <span className={this.getClassName()}>\r\n          <b>Health:</b> {this.props.currentHealth} / {this.props.maxHealth}\r\n        </span>\r\n        <span className=\"player-gold\">\r\n          <b>Gold:</b> {this.props.gold}\r\n        </span>\r\n        <span>\r\n          <b>Level:</b> {this.props.level}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TreasureChest extends Component {\r\n  state = {};\r\n  render() {\r\n    const showcaseTreasure = this.props.treasure.getTreasure();\r\n    console.log(showcaseTreasure);\r\n    return (\r\n      <div>\r\n        <h2>Claim a Reward</h2>\r\n        <div className=\"treasure-flex\">\r\n          {showcaseTreasure.map((treasure, index) => (\r\n            <div\r\n              key={index}\r\n              onClick={() => this.props.onTreasureClick(treasure)}\r\n            >\r\n              {treasure.constructor.name === \"Attack\" && (\r\n                <div className=\"inside-card \">\r\n                  <ul>\r\n                    <li className=\"card-header-fight attack-card\">\r\n                      {treasure.name}\r\n                    </li>\r\n                    <span>\r\n                      <li>\r\n                        <span>Mana Cost: {treasure.manaCost}</span>\r\n                      </li>\r\n                      <li>\r\n                        <span>\r\n                          Damage: {treasure.damage} X {treasure.amountOfHits}\r\n                        </span>\r\n                      </li>\r\n                      <li>\r\n                        <span>Synergy: {treasure.synergyItem}</span>\r\n                      </li>\r\n                      <li>\r\n                        <span>Conflict: {treasure.conflictCategory}</span>\r\n                      </li>\r\n                    </span>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n              {treasure.constructor.name === \"Block\" && (\r\n                <div className=\"inside-card \">\r\n                  <ul>\r\n                    <li className=\"card-header-fight block-card\">\r\n                      {treasure.name}\r\n                    </li>\r\n                    <span>\r\n                      <li>\r\n                        <span>Mana Cost: {treasure.manaCost}</span>\r\n                      </li>\r\n                      <li>\r\n                        <span>Block: {treasure.blockAmount}</span>\r\n                      </li>\r\n                      <li>\r\n                        <span>Synergy: {treasure.synergyItem}</span>\r\n                      </li>\r\n                      <li>\r\n                        <span>Conflict: {treasure.conflictCategory}</span>\r\n                      </li>\r\n                    </span>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n              {treasure.constructor.name === \"Weapon\" && (\r\n                <div className=\"inside-card \">\r\n                  <ul>\r\n                    <li className=\"card-header-fight weapon-reward\">\r\n                      {treasure.name}\r\n                    </li>\r\n                    <span>\r\n                      <li>Damage Multiplier: {treasure.damageMultiplier}</li>\r\n                      <li>Block Multiplier: {treasure.blockMultiplier}</li>\r\n                      <li>Category: {treasure.category}</li>\r\n                    </span>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button\r\n          className=\"btn btn-danger\"\r\n          onClick={() => this.props.onNoTreasure()}\r\n        >\r\n          Maybe not...\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TreasureChest;\r\n","import React, { Component } from \"react\";\r\n\r\nclass inventory extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <ul>\r\n        {this.props.playerInventory.map((item, index) => (\r\n          <li\r\n            key={index}\r\n            className=\"inventory-item\"\r\n            onClick={() => this.props.onInventoryClick(item, index)}\r\n          >\r\n            {item.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default inventory;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Shop extends Component {\r\n  state = {};\r\n\r\n  getCostClassForItem = (itemCost, playersMoney) => {\r\n    let itemClass = \"shop-item-cost \";\r\n    if (itemCost > playersMoney) {\r\n      itemClass += \"cant-afford\";\r\n    } else if (itemCost <= playersMoney) {\r\n      itemClass += \"can-afford\";\r\n    }\r\n    return itemClass;\r\n  };\r\n\r\n  render() {\r\n    const showcaseShop = this.props.shop.getShopItems();\r\n    return (\r\n      <div className=\"shop-container\">\r\n        <div className=\"shop-item-flex\">\r\n          {showcaseShop.map((shopItem, index) => (\r\n            <div\r\n              key={index}\r\n              onClick={() => this.props.onShopClick(shopItem, index)}\r\n            >\r\n              {shopItem.constructor.name === \"Attack\" && (\r\n                <div className=\"inside-card \">\r\n                  <ul>\r\n                    <li className=\"card-header-fight attack-card\">\r\n                      {shopItem.name}\r\n                    </li>\r\n                    <span>\r\n                      <li\r\n                        className={this.getCostClassForItem(\r\n                          shopItem.cost,\r\n                          this.props.playersMoney\r\n                        )}\r\n                      >\r\n                        {shopItem.cost}\r\n                      </li>\r\n                      <li>Mana Cost: {shopItem.manaCost}</li>\r\n                      <li>\r\n                        Damage: {shopItem.damage} X {shopItem.amountOfHits}\r\n                      </li>\r\n                      <li>Synergy: {shopItem.synergyItem}</li>\r\n                      <li>Conflict: {shopItem.conflictCategory}</li>\r\n                    </span>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n              {shopItem.constructor.name === \"Block\" && (\r\n                <div className=\"inside-card \">\r\n                  <ul>\r\n                    <li className=\"card-header-fight block-card\">\r\n                      {shopItem.name}\r\n                    </li>\r\n                    <span>\r\n                      <li\r\n                        className={this.getCostClassForItem(\r\n                          shopItem.cost,\r\n                          this.props.playersMoney\r\n                        )}\r\n                      >\r\n                        {shopItem.cost}\r\n                      </li>\r\n                      <li>\r\n                        <span>Mana Cost: {shopItem.manaCost}</span>\r\n                      </li>\r\n                      <li>\r\n                        <span>Block: {shopItem.blockAmount}</span>\r\n                      </li>\r\n                      <li>\r\n                        <span>Synergy: {shopItem.synergyItem}</span>\r\n                      </li>\r\n                      <li>Conflict: {shopItem.conflictCategory}</li>\r\n                    </span>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n              {shopItem.constructor.name === \"Weapon\" && (\r\n                <div className=\"inside-card \">\r\n                  <ul>\r\n                    <li className=\"card-header-fight weapon-reward\">\r\n                      {shopItem.name}\r\n                    </li>\r\n                    <span>\r\n                      <li\r\n                        className={this.getCostClassForItem(\r\n                          shopItem.cost,\r\n                          this.props.playersMoney\r\n                        )}\r\n                      >\r\n                        {shopItem.cost}\r\n                      </li>\r\n                      <li>Damage Multiplier: {shopItem.damageMultiplier}</li>\r\n                      <li>Block Multiplier: {shopItem.blockMultiplier}</li>\r\n                      <li>Category: {shopItem.category}</li>\r\n                    </span>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"leave-shop\">\r\n          <button className=\"btn btn-primary\" onClick={this.props.exitShop}>\r\n            Exit Shop\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Shop;\r\n","import React, { Component } from \"react\";\r\n\r\nclass discardCard extends Component {\r\n  state = {\r\n    moveSelectedByIndex: \"\",\r\n  };\r\n\r\n  getCardOutlineClass = (moveIndex) => {\r\n    let cardOutlineClassname = \"inside-card discard-card \";\r\n    if (moveIndex === this.state.moveSelectedByIndex) {\r\n      cardOutlineClassname += \"card-selected-outline\";\r\n    }\r\n    return cardOutlineClassname;\r\n  };\r\n\r\n  getCardClass = (moveType) => {\r\n    let cardClassName = \"card-header-fight \";\r\n    if (moveType === \"Attack\") {\r\n      cardClassName += \"attack-card\";\r\n    } else if (moveType === \"Block\") {\r\n      cardClassName += \"block-card\";\r\n    }\r\n    return cardClassName;\r\n  };\r\n\r\n  selectCard = (moveSelectedByIndex) => {\r\n    this.setState({ moveSelectedByIndex });\r\n  };\r\n\r\n  render() {\r\n    const disabled = this.state.moveSelected === \"\";\r\n    return (\r\n      <div>\r\n        <div className=\" flex-parent\">\r\n          <div className=\"weapon-info\">\r\n            <h2 className=\"info-title\">Weapon</h2>\r\n            <div className=\"inside-card weapon-details\">\r\n              <ul>\r\n                <li className=\"card-header-fight weapon-reward\">\r\n                  {this.props.weapon.name}\r\n                </li>\r\n                <span>\r\n                  <li>\r\n                    Damage Multiplier:\r\n                    {this.props.weapon.damageMultiplier}\r\n                  </li>\r\n                  <li>\r\n                    Block Multiplier:\r\n                    {this.props.weapon.blockMultiplier}\r\n                  </li>\r\n                </span>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"all-moves\">\r\n            <h2 className=\"info-title\">Moves</h2>\r\n            <div className=\"discard-one-move\">\r\n              {this.props.moves.map((move, index) => (\r\n                <div key={index}>\r\n                  {index === 3 && <div className=\"break\"></div>}\r\n                  <div\r\n                    className={this.getCardOutlineClass(index)}\r\n                    onClick={() => this.selectCard(index)}\r\n                  >\r\n                    <ul>\r\n                      <li className={this.getCardClass(move.constructor.name)}>\r\n                        {move.name}\r\n                      </li>\r\n                      <span>\r\n                        <li>\r\n                          <span>Mana Cost: {move.manaCost}</span>\r\n                        </li>\r\n                        <li>\r\n                          {move.constructor.name === \"Attack\" && (\r\n                            <span>\r\n                              Damage: {move.damage} X {move.amountOfHits}\r\n                            </span>\r\n                          )}\r\n                          {move.constructor.name === \"Block\" && (\r\n                            <span>Block: {move.blockAmount}</span>\r\n                          )}\r\n                        </li>\r\n                        <li>\r\n                          <span>Synergy: {move.synergyItem}</span>\r\n                        </li>\r\n                        <li>\r\n                          <span>Conflict: {move.conflictCategory}</span>\r\n                        </li>\r\n                      </span>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <button\r\n              onClick={() =>\r\n                this.props.onDiscard(this.state.moveSelectedByIndex)\r\n              }\r\n              disabled={disabled}\r\n              className=\"text-center btn btn-primary ml-2 mt-2\"\r\n            >\r\n              Click me\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default discardCard;\r\n","import React, { Component } from \"react\";\r\n\r\nclass restChoice extends Component {\r\n  state = {\r\n    playerCurrentHealth: this.props.player.currentHealth,\r\n    playerMaxHealth: this.props.player.maxHealth\r\n  };\r\n\r\n  showFullHealth = () => {\r\n    let playerCurrentHealth = this.props.player.maxHealth;\r\n    this.setState({ playerCurrentHealth });\r\n  };\r\n\r\n  showCurrentHealth = () => {\r\n    let playerCurrentHealth = this.props.player.currentHealth;\r\n    this.setState({ playerCurrentHealth });\r\n  };\r\n\r\n  componentDidMount() {\r\n    document\r\n      .getElementById(\"player-health-id\")\r\n      .addEventListener(\"mouseover\", this.showFullHealth);\r\n    document\r\n      .getElementById(\"player-health-id\")\r\n      .addEventListener(\"mouseout\", this.showCurrentHealth);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document\r\n      .getElementById(\"player-health-id\")\r\n      .removeEventListener(\"mouseover\", this.showFullHealth);\r\n    document\r\n      .getElementById(\"player-health-id\")\r\n      .removeEventListener(\"mouseout\", this.showCurrentHealth);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <h2>Full Heal</h2>\r\n          <div className=\"row\">\r\n            <div className=\"col-3\"></div>\r\n            <div\r\n              className=\"rest-choice-heal col-6\"\r\n              id=\"player-health-id\"\r\n              onClick={() => this.props.onRestClick(this.props.player)}\r\n            >\r\n              <ul className=\"player-health-padding\">\r\n                <li>\r\n                  {this.state.playerCurrentHealth} /{\" \"}\r\n                  {this.state.playerMaxHealth}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-3\"></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <h2 className=\"rest-choice\">Smith Weapon</h2>\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"col-5 increase-attack\"\r\n              onClick={() =>\r\n                this.props.onSmithClick(\r\n                  this.props.player,\r\n                  \"Attack\",\r\n                  this.props.weapon.name\r\n                )\r\n              }\r\n            >\r\n              <ul>\r\n                <li>Increase attack by .15</li>\r\n                <li>Decrease block by .05</li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-2\"></div>\r\n            <div\r\n              className=\"col-5 increase-block\"\r\n              onClick={() =>\r\n                this.props.onSmithClick(\r\n                  this.props.player,\r\n                  \"Block\",\r\n                  this.props.weapon.name\r\n                )\r\n              }\r\n            >\r\n              <ul>\r\n                <li>Increase block by .15</li>\r\n                <li>Decrease attack by .05</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default restChoice;\r\n","import React, { Component } from \"react\";\r\n\r\nclass randomEvent extends Component {\r\n  state = {};\r\n  render() {\r\n    const event = this.props.randomEvent.getRandomEvent();\r\n    return (\r\n      <div>\r\n        <div className=\"random-event-description\">{event.description}</div>\r\n        {event.options.map((option, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"event-option\"\r\n            onClick={() =>\r\n              this.props.onEventClick(event.effects[index], event.category)\r\n            }\r\n          >\r\n            {index}\r\n            {\". \"} {option}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default randomEvent;\r\n","import React, { Component } from \"react\";\r\nimport sword from \"../assets/imgs/sword5.png\";\r\nimport shield from \"../assets/imgs/shield3.png\";\r\n\r\nclass fightBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      turn: 1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.handleChatBox(\"--- TURN \" + this.state.turn + \" ---\");\r\n  }\r\n\r\n  getSynergyClassName = (moveSynergy) => {\r\n    if (moveSynergy === this.props.playerWeapon.name) {\r\n      return \"synergy-item\";\r\n    }\r\n  };\r\n\r\n  getConflictClassName = (moveConflict) => {\r\n    if (moveConflict === this.props.playerWeapon.category) {\r\n      return \"conflict-item\";\r\n    }\r\n  };\r\n\r\n  getManaClassForCard(manaCost) {\r\n    let manaClass = \"card-mana-cost \";\r\n    if (manaCost > this.props.currentMana) {\r\n      manaClass += \"not-useable\";\r\n    } else {\r\n      manaClass += \"useable\";\r\n    }\r\n    return manaClass;\r\n  }\r\n\r\n  getTextStyle = (lengthOfHealthBar) => {\r\n    try {\r\n      let lengthOfTextDiv = document.getElementById(\"text-health-id\")\r\n        .offsetWidth;\r\n      let textPosition = lengthOfHealthBar / 2 - lengthOfTextDiv / 2;\r\n      const textDivPosition = {\r\n        left: textPosition,\r\n      };\r\n      return textDivPosition;\r\n    } catch {}\r\n  };\r\n\r\n  getEnemyMoveStyle = (moveType) => {\r\n    console.log(moveType);\r\n    let typeStyle = {};\r\n    switch (moveType) {\r\n      case \"Attack\":\r\n        typeStyle.color = \"#ff3333\";\r\n        break;\r\n      case \"Block\":\r\n        typeStyle.color = \"#0080ff\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return typeStyle;\r\n  };\r\n\r\n  getActualDamage = (moveAmount, multiplier, moveSynergy, moveConflict) => {\r\n    let damage = Math.floor(moveAmount * multiplier);\r\n    if (this.props.playerWeapon.name === moveSynergy) {\r\n      damage = Math.ceil(damage * 1.5);\r\n      return <span className=\"increased-damage\"> {damage} </span>;\r\n    } else if (this.props.playerWeapon.category === moveConflict) {\r\n      damage = Math.floor(damage * 0.75);\r\n      return <span className=\"decreased-damage\"> {damage} </span>;\r\n    }\r\n    return <span> {damage} </span>;\r\n  };\r\n\r\n  handleDefendClick = (move) => {\r\n    if (move.manaCost <= this.props.currentMana) {\r\n      let shield = document.getElementById(move.name);\r\n      shield.style.opacity = \"1\";\r\n      this.props.onBlockCardClick(\r\n        move,\r\n        this.props.playerWeapon,\r\n        this.props.currentMana\r\n      );\r\n      setTimeout(() => {\r\n        shield.style.opacity = \"0\";\r\n      }, 300);\r\n    } else {\r\n      this.props.handleChatBox(\"not enough mana\");\r\n    }\r\n  };\r\n\r\n  handleAttackClick = (move) => {\r\n    if (move.manaCost <= this.props.currentMana) {\r\n      let sword = document.getElementById(move.name);\r\n      //sword.style.display = \"block\";\r\n      sword.style.opacity = \"1\";\r\n      this.props.onAttackCardClick(\r\n        this.props.enemy,\r\n        move,\r\n        this.props.playerWeapon,\r\n        this.props.currentMana\r\n      );\r\n      setTimeout(() => {\r\n        sword.style.opacity = \"0\";\r\n      }, 300);\r\n    } else {\r\n      this.props.handleChatBox(\"not enough mana\");\r\n    }\r\n  };\r\n\r\n  handleEndTurn = (enemyMove) => {\r\n    this.props.onEnemyAttack(\r\n      enemyMove,\r\n      this.props.block,\r\n      this.props.enemy.weapon\r\n    );\r\n    this.setState({ turn: this.state.turn + 1 }, () =>\r\n      this.props.handleChatBox(\"--- TURN \" + this.state.turn + \" ---\")\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let enemyMove = this.props.enemy.getCurrentMove();\r\n    const lengthOfHealthBar = 200;\r\n    let hpWidth =\r\n      (this.props.enemy.currentHealth / this.props.enemy.maxHealth) *\r\n      lengthOfHealthBar;\r\n    let color = \"#526f35\";\r\n    if (this.props.enemy.currentHealth < this.props.enemy.maxHealth / 2) {\r\n      color = \"#e80000\";\r\n    }\r\n    let healthBarWidth = {\r\n      width: hpWidth,\r\n      backgroundColor: color,\r\n    };\r\n\r\n    return (\r\n      <div className=\"text-center\">\r\n        <div className=\"enemy-info container\">\r\n          <ul>\r\n            <li className=\"text-center\">\r\n              <span className=\"enemy-name\">{this.props.enemy.name}</span>\r\n              <div className=\"flex-test justify-center\">\r\n                <div className=\"health-outline text-center\">\r\n                  <div className=\"health-bar\" style={healthBarWidth}></div>\r\n\r\n                  <div\r\n                    className=\"enemy-health-text\"\r\n                    id=\"text-health-id\"\r\n                    style={this.getTextStyle(lengthOfHealthBar)}\r\n                  >\r\n                    {this.props.enemy.currentHealth}/\r\n                    {this.props.enemy.maxHealth}\r\n                  </div>\r\n                </div>\r\n                <div className=\"enemy-block\">\r\n                  <b>Block:</b> {this.props.enemy.block}\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <span className=\"next-enemy-move\">Enemy Move: </span>\r\n              <span\r\n                className=\"next-enemy-move\"\r\n                style={this.getEnemyMoveStyle(enemyMove.constructor.name)}\r\n              >\r\n                {enemyMove.name}\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\" flex-parent\">\r\n          <div className=\"weapon-info\">\r\n            <h2 className=\"info-title\">Weapon</h2>\r\n            <div className=\"inside-card weapon-details\">\r\n              <ul>\r\n                <li className=\"card-header-fight weapon-reward\">\r\n                  {this.props.playerWeapon.name}\r\n                </li>\r\n                <li>\r\n                  Dmg Multiplier: {this.props.playerWeapon.damageMultiplier}\r\n                </li>\r\n                <li>\r\n                  Block Multiplier: {this.props.playerWeapon.blockMultiplier}\r\n                </li>\r\n                <li>Cateogry: {this.props.playerWeapon.category}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"all-moves\">\r\n            <h2 className=\"info-title\">Moves</h2>\r\n            <div className=\"discard-one-move\">\r\n              {this.props.playerMoves.map((move, index) =>\r\n                move.constructor.name === \"Attack\" ? (\r\n                  <div\r\n                    className=\"inside-card move-details\"\r\n                    key={move.name}\r\n                    onClick={() => this.handleAttackClick(move)}\r\n                  >\r\n                    <ul>\r\n                      <li className=\"card-header-fight attack-card\">\r\n                        {move.name}\r\n                      </li>\r\n                      <span>\r\n                        <li className={this.getManaClassForCard(move.manaCost)}>\r\n                          {move.manaCost}\r\n                        </li>\r\n                        <li>\r\n                          <span>\r\n                            Damage:\r\n                            {this.getActualDamage(\r\n                              move.damage,\r\n                              this.props.playerWeapon.damageMultiplier,\r\n                              move.synergyItem,\r\n                              move.conflictCategory\r\n                            )}\r\n                            X {move.amountOfHits}\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          Synergy:{\" \"}\r\n                          <span\r\n                            className={this.getSynergyClassName(\r\n                              move.synergyItem\r\n                            )}\r\n                          >\r\n                            {move.synergyItem}\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          Conflict:{\" \"}\r\n                          <span\r\n                            className={this.getConflictClassName(\r\n                              move.conflictCategory\r\n                            )}\r\n                          >\r\n                            {move.conflictCategory}\r\n                          </span>\r\n                        </li>\r\n                      </span>\r\n                    </ul>\r\n                    <img\r\n                      alt=\"\"\r\n                      src={sword}\r\n                      id={move.name}\r\n                      className=\"animation-sword\"\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    className=\"inside-card move-details\"\r\n                    key={index}\r\n                    onClick={() => this.handleDefendClick(move)}\r\n                  >\r\n                    <ul>\r\n                      <li className=\"card-header-fight block-card\">\r\n                        {move.name}\r\n                      </li>\r\n                      <span>\r\n                        <li className={this.getManaClassForCard(move.manaCost)}>\r\n                          {move.manaCost}\r\n                        </li>\r\n                        <li>\r\n                          <span>\r\n                            Block:\r\n                            {this.getActualDamage(\r\n                              move.blockAmount,\r\n                              this.props.playerWeapon.blockMultiplier,\r\n                              move.synergyItem,\r\n                              move.conflictCategory\r\n                            )}\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          Synergy:{\" \"}\r\n                          <span\r\n                            className={this.getSynergyClassName(\r\n                              move.synergyItem\r\n                            )}\r\n                          >\r\n                            {move.synergyItem}\r\n                          </span>\r\n                        </li>\r\n                        <li>\r\n                          Conflict:{\" \"}\r\n                          <span\r\n                            className={this.getConflictClassName(\r\n                              move.conflictCategory\r\n                            )}\r\n                          >\r\n                            {move.conflictCategory}\r\n                          </span>\r\n                        </li>\r\n                      </span>\r\n                    </ul>\r\n                    <img\r\n                      alt=\"\"\r\n                      src={shield}\r\n                      id={move.name}\r\n                      className=\"animation-sword\"\r\n                    />\r\n                  </div>\r\n                )\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"end-turn-button\">\r\n            <button\r\n              className=\"btn btn-primary end-turn-button\"\r\n              onClick={() => this.handleEndTurn(enemyMove)}\r\n            >\r\n              End turn\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mana-and-block\">\r\n          <span\r\n            className={`${\r\n              this.props.currentMana > 0 ? \"useable\" : \"not-useable\"\r\n            }`}\r\n          >\r\n            <b>Mana:</b> {this.props.currentMana} / {this.props.maxMana}\r\n          </span>\r\n          <span className=\"blocking ml-4\">\r\n            <b>Block:</b> {this.props.block}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default fightBoard;\r\n","class Move {\r\n  constructor(\r\n    name,\r\n    description,\r\n    manaCost,\r\n    synergyItem,\r\n    conflictCategory,\r\n    rarity,\r\n    cost\r\n  ) {\r\n    this.name = name;\r\n    this.description = description;\r\n    this.manaCost = manaCost;\r\n    this.synergyItem = synergyItem;\r\n    this.conflictCategory = conflictCategory;\r\n    this.rarity = rarity;\r\n    this.cost = cost;\r\n  }\r\n}\r\n\r\nclass Attack extends Move {\r\n  constructor(\r\n    name,\r\n    description,\r\n    manaCost,\r\n    synergyItem,\r\n    conflictCategory,\r\n    rarity,\r\n    cost,\r\n    damage,\r\n    amountOfHits\r\n  ) {\r\n    super(\r\n      name,\r\n      description,\r\n      manaCost,\r\n      synergyItem,\r\n      conflictCategory,\r\n      rarity,\r\n      cost\r\n    );\r\n    this.damage = damage;\r\n    this.amountOfHits = amountOfHits;\r\n  }\r\n}\r\n\r\nclass Block extends Move {\r\n  constructor(\r\n    name,\r\n    description,\r\n    manaCost,\r\n    synergyItem,\r\n    conflictCategory,\r\n    rarity,\r\n    cost,\r\n    blockAmount\r\n  ) {\r\n    super(\r\n      name,\r\n      description,\r\n      manaCost,\r\n      synergyItem,\r\n      conflictCategory,\r\n      rarity,\r\n      cost\r\n    );\r\n    this.blockAmount = blockAmount;\r\n  }\r\n}\r\n\r\n//ATTACKS\r\n\r\nexport const planning = new Attack(\r\n  \"Planning\",\r\n  \"\",\r\n  1,\r\n  \"None\",\r\n  \"None\",\r\n  \"Common\",\r\n  100,\r\n  0,\r\n  1\r\n);\r\n\r\nexport const nullBoy = new Attack(\r\n  \"Null Boy\",\r\n  \"Relaxing time :)\",\r\n  1,\r\n  \"\",\r\n  \"\",\r\n  \"Common\",\r\n  0,\r\n  3,\r\n  1\r\n);\r\n\r\nexport const slither = new Attack(\r\n  \"Slither\",\r\n  \"we slithering\",\r\n  1,\r\n  \"\",\r\n  \"\",\r\n  \"Common\",\r\n  0,\r\n  1,\r\n  4\r\n);\r\n\r\nexport const strike = new Attack(\r\n  \"Strike\",\r\n  \"description for strike Lorem ipsum dolor sit amet consectetur adipisicing elit. Ab quidem dolorem eaque quam cumque minus, omnis consequuntur sequi modi illum\",\r\n  1,\r\n  \"Sword\",\r\n  \"Big Shield\",\r\n  \"Starting-Card\",\r\n  0,\r\n  5,\r\n  1\r\n);\r\n\r\nexport const tripleStrike = new Attack(\r\n  \"Triple Strike\",\r\n  \"Strikes the opponent 3 times in quick succession\",\r\n  2,\r\n  \"Dagger\",\r\n  \"Big Sword\",\r\n  \"Rare\",\r\n  100,\r\n  4,\r\n  3\r\n);\r\n\r\nexport const lowBlow = new Attack(\r\n  \"Low Blow\",\r\n  \"sweep the legs baby\",\r\n  1,\r\n  \"Dagger\",\r\n  \"Big Shield\",\r\n  \"Common\",\r\n  55,\r\n  5,\r\n  1\r\n);\r\n\r\nexport const stab = new Attack(\r\n  \"Stab\",\r\n  \"Stabby stabby\",\r\n  2,\r\n  \"Sword\",\r\n  \"Small Weapon\",\r\n  \"Common\",\r\n  50,\r\n  10,\r\n  1\r\n);\r\n\r\nexport const elbow = new Attack(\r\n  \"Elbow\",\r\n  \"\",\r\n  1,\r\n  \"None\",\r\n  \"None\",\r\n  \"Common\",\r\n  25,\r\n  5,\r\n  1\r\n);\r\n\r\nexport const sideLunge = new Attack(\r\n  \"Side Lunge\",\r\n  \"longSword\",\r\n  1,\r\n  \"Long Sword\",\r\n  \"Small Weapon\",\r\n  \"Rare\",\r\n  125,\r\n  7,\r\n  1\r\n);\r\n\r\nexport const runningLunge = new Attack(\r\n  \"Running Lunge\",\r\n  \"longSword\",\r\n  2,\r\n  \"Long Sword\",\r\n  \"Big Shield\",\r\n  \"Rare\",\r\n  125,\r\n  13,\r\n  1\r\n);\r\n\r\nexport const crossSwipe = new Attack(\r\n  \"Cross Swipe\",\r\n  \"longSword\",\r\n  1,\r\n  \"Long Sword\",\r\n  \"Small Weapon\",\r\n  \"Common\",\r\n  45,\r\n  5,\r\n  1\r\n);\r\n\r\nexport const weaponBash = new Attack(\r\n  \"Weapon Bash\",\r\n  \"bashing them with shield :)\",\r\n  1,\r\n  \"Kite Shield\",\r\n  \"Small Weapon\",\r\n  \"Common\",\r\n  50,\r\n  5,\r\n  1\r\n);\r\n\r\nexport const kneeBreaker = new Attack(\r\n  \"Knee Breaker\",\r\n  \"quick check to the knees\",\r\n  1,\r\n  \"Buckler Shield\",\r\n  \"Big Weapon\",\r\n  \"Common\",\r\n  40,\r\n  3,\r\n  2\r\n);\r\n\r\nexport const bruteCharge = new Attack(\r\n  \"Brute Charge\",\r\n  \"Running through enemy\",\r\n  2,\r\n  \"Buckler Shield\",\r\n  \"Big Shield\",\r\n  \"Common\",\r\n  90,\r\n  9,\r\n  1\r\n);\r\n\r\nexport const quickScratch = new Attack(\r\n  \"Quick Scratch\",\r\n  \"\",\r\n  1,\r\n  \"Claws\",\r\n  \"Big Shield\",\r\n  \"Common\",\r\n  45,\r\n  6,\r\n  1\r\n);\r\n\r\nexport const bloodyMess = new Attack(\r\n  \"Bloody Mess\",\r\n  \"\",\r\n  2,\r\n  \"Claws\",\r\n  \"Small Shield\",\r\n  \"Rare\",\r\n  110,\r\n  3,\r\n  5\r\n);\r\n\r\n//BLOCKS\r\nexport const defend = new Block(\r\n  \"Defend\",\r\n  \"defend description\",\r\n  1,\r\n  \"Kite Shield\",\r\n  \"Big Weapon\",\r\n  \"Starting-Card\",\r\n  0,\r\n  4\r\n);\r\n\r\nexport const blockStance = new Block(\r\n  \"Block Stance\",\r\n  \"blockstance description\",\r\n  1,\r\n  \"Sword\",\r\n  \"Big Weapon\",\r\n  \"Common\",\r\n  30,\r\n  5\r\n);\r\n\r\nexport const wall = new Block(\r\n  \"Wall\",\r\n  \"user hides behind shield\",\r\n  2,\r\n  \"Kite Shield\",\r\n  \"Small Weapon\",\r\n  \"Common\",\r\n  30,\r\n  10\r\n);\r\n\r\nexport const quickBlock = new Block(\r\n  \"Quick Block\",\r\n  \"qb\",\r\n  1,\r\n  \"Buckler Shield\",\r\n  \"Big Shield\",\r\n  \"Rare\",\r\n  75,\r\n  7\r\n);\r\n\r\nexport const parry = new Block(\r\n  \"Parry\",\r\n  \"pp\",\r\n  1,\r\n  \"Dagger\",\r\n  \"Big Weapon\",\r\n  \"Rare\",\r\n  95,\r\n  7\r\n);\r\n\r\nexport const barricade = new Block(\r\n  \"Barricade\",\r\n  \"pp\",\r\n  2,\r\n  \"Kite Shield\",\r\n  \"Medium Weapon\",\r\n  \"Rare\",\r\n  100,\r\n  11\r\n);\r\n\r\nexport const dualBlock = new Block(\r\n  \"Dual Block\",\r\n  \"dhb\",\r\n  2,\r\n  \"Sword\",\r\n  \"Small Weapon\",\r\n  \"Rare\",\r\n  100,\r\n  10\r\n);\r\n\r\nexport const playerMoveArray = [\r\n  tripleStrike,\r\n  stab,\r\n  lowBlow,\r\n  elbow,\r\n  sideLunge,\r\n  runningLunge,\r\n  crossSwipe,\r\n  weaponBash,\r\n  kneeBreaker,\r\n  bruteCharge,\r\n  quickScratch,\r\n  bloodyMess,\r\n  blockStance,\r\n  wall,\r\n  quickBlock,\r\n  parry,\r\n  barricade,\r\n  dualBlock,\r\n];\r\n","class Weapon {\r\n  constructor(name, damageMultiplier, blockMultiplier, rarity, cost, category) {\r\n    this.name = name;\r\n    this.damageMultiplier = damageMultiplier;\r\n    this.blockMultiplier = blockMultiplier;\r\n    this.rarity = rarity;\r\n    this.cost = cost;\r\n    this.category = category;\r\n  }\r\n}\r\n\r\n//Enemy weapons only\r\nexport const teeth = new Weapon(\"Teeth\", 0.7, 0.7, \"Common\", 0, \"Small Weapon\");\r\n\r\n//enemy and player weapons\r\nexport const dagger = new Weapon(\r\n  \"Dagger\",\r\n  0.85,\r\n  0.65,\r\n  \"Common\",\r\n  0,\r\n  \"Small Weapon\"\r\n);\r\nexport const claws = new Weapon(\"Claws\", 1, 0.5, \"Common\", 90, \"Small Weapon\");\r\nexport const sword = new Weapon(\r\n  \"Sword\",\r\n  0.9,\r\n  0.7,\r\n  \"Common\",\r\n  100,\r\n  \"Medium Weapon\"\r\n);\r\nexport const longSword = new Weapon(\r\n  \"Long Sword\",\r\n  1.25,\r\n  0.5,\r\n  \"Rare\",\r\n  200,\r\n  \"Big Weapon\"\r\n);\r\nexport const kiteShield = new Weapon(\r\n  \"Kite Shield\",\r\n  0.5,\r\n  1.25,\r\n  \"Rare\",\r\n  220,\r\n  \"Big Shield\"\r\n);\r\nexport const bucklerShield = new Weapon(\r\n  \"Buckler Shield\",\r\n  0.6,\r\n  1.0,\r\n  \"Common\",\r\n  120,\r\n  \"Small Shield\"\r\n);\r\nexport const heaterShield = new Weapon(\r\n  \"Heater Shield\",\r\n  0.7,\r\n  0.85,\r\n  \"Common\",\r\n  120,\r\n  \"Medium Shield\"\r\n);\r\n\r\nexport const weaponArray = [\r\n  claws,\r\n  sword,\r\n  longSword,\r\n  kiteShield,\r\n  bucklerShield,\r\n  heaterShield,\r\n];\r\n","import {\r\n  dualBlock,\r\n  runningLunge,\r\n  tripleStrike,\r\n  strike,\r\n  parry,\r\n  nullBoy,\r\n  quickScratch,\r\n  defend,\r\n  slither,\r\n  wall,\r\n  kneeBreaker,\r\n  lowBlow,\r\n  crossSwipe,\r\n  planning,\r\n} from \"../constants/moves\";\r\nimport { claws, longSword, dagger, teeth } from \"../constants/weapons\";\r\n\r\nexport class Monster {\r\n  constructor(\r\n    name,\r\n    maxHealth,\r\n    weapon,\r\n    monsterMoves,\r\n    level,\r\n    isABoss,\r\n    moneyDropRange\r\n  ) {\r\n    this.name = name;\r\n    this.maxHealth = maxHealth;\r\n    this.currentHealth = maxHealth;\r\n    this.weapon = weapon;\r\n    this.monsterMoves = monsterMoves;\r\n    this.monsterMoveIndex = 0;\r\n    this.level = level;\r\n    this.isABoss = isABoss;\r\n    this.block = 0;\r\n    this.moneyDropRange = moneyDropRange;\r\n  }\r\n  getCurrentMove() {\r\n    return this.monsterMoves[this.monsterMoveIndex];\r\n  }\r\n  goToNextMove() {\r\n    this.monsterMoveIndex++;\r\n    if (this.monsterMoves[this.monsterMoveIndex] == null) {\r\n      this.monsterMoveIndex = 0;\r\n    }\r\n  }\r\n  increaseBlock(blockAmount) {\r\n    this.block += blockAmount;\r\n  }\r\n  resetBlock() {\r\n    this.block = 0;\r\n  }\r\n  setBlock(newBlock) {\r\n    this.block = newBlock;\r\n  }\r\n  getMoneyDropped() {\r\n    return Math.floor(\r\n      Math.random() * (this.moneyDropRange[1] - this.moneyDropRange[0] + 1) +\r\n        this.moneyDropRange[0]\r\n    );\r\n  }\r\n}\r\n\r\n//MONSTERS\r\n\r\n//first level\r\n\r\nconst cockRoach = new Monster(\r\n  \"CockRoach\",\r\n  25,\r\n  claws,\r\n  [quickScratch, nullBoy, defend],\r\n  1,\r\n  false,\r\n  [10, 30]\r\n);\r\nconst worm = new Monster(\"Worm\", 17, claws, [slither], 1, false, [1, 25]);\r\n\r\n//Second Level\r\n\r\nconst theif = new Monster(\r\n  \"Theif\",\r\n  40,\r\n  dagger,\r\n  [planning, tripleStrike, parry],\r\n  2,\r\n  false,\r\n  [1, 60]\r\n);\r\n\r\nconst spider = new Monster(\r\n  \"Spider\",\r\n  40,\r\n  teeth,\r\n  [strike, quickScratch, defend],\r\n  2,\r\n  false,\r\n  [10, 30]\r\n);\r\n\r\nexport const enemies = [cockRoach, worm, theif, spider];\r\n\r\n//BOSSES\r\n\r\n//first level\r\n\r\nconst redDevil = new Monster(\r\n  \"Red Devil\",\r\n  60,\r\n  claws,\r\n  [wall, quickScratch, runningLunge],\r\n  1,\r\n  true,\r\n  [50, 100]\r\n);\r\n\r\n//second level\r\n\r\nconst bigDaddy = new Monster(\r\n  \"Big Daddy\",\r\n  50,\r\n  longSword,\r\n  [dualBlock, runningLunge, lowBlow],\r\n  2,\r\n  true,\r\n  [50, 100]\r\n);\r\n\r\nexport const bosses = [redDevil, bigDaddy];\r\n\r\n//RANDOM EVENT ENEMIES\r\n\r\nconst smither = new Monster(\r\n  \"Smither\",\r\n  60,\r\n  longSword,\r\n  [lowBlow, crossSwipe, kneeBreaker],\r\n  \"Smith\",\r\n  true,\r\n  [60, 80]\r\n);\r\n\r\nexport const randomEventMonsters = [smither];\r\n","import { strike, defend } from \"../constants/moves\";\r\nimport { dagger } from \"../constants/weapons\";\r\n\r\n/*\r\nconst playerStartingHealth = 25;\r\nconst playerStartingMana = 2;\r\nconst playerStartingGold = 30;\r\nconst playerStartingWeapon = dagger;\r\nconst playerStartingMoves = [strike, defend];\r\n*/\r\n\r\nclass Player {\r\n  constructor(\r\n    playerName,\r\n    maxHealth,\r\n    maxMana,\r\n    playerMoves,\r\n    playerPosition,\r\n    weapon,\r\n    gold\r\n  ) {\r\n    this.playerName = playerName;\r\n    this.currentHealth = maxHealth;\r\n    this.maxHealth = maxHealth;\r\n    this.maxMana = maxMana;\r\n    this.currentMana = maxMana;\r\n    this.playerInventory = [];\r\n    this.playerMoves = playerMoves;\r\n    this.playerPosition = playerPosition;\r\n    this.weapon = weapon;\r\n    this.gold = gold;\r\n    this.block = 0;\r\n  }\r\n  setPlayerName(newName) {\r\n    this.playerName = newName;\r\n  }\r\n  addToInventory(item) {\r\n    this.playerInventory.push(item);\r\n  }\r\n  increaseGold(goldAdded) {\r\n    this.gold += goldAdded;\r\n  }\r\n  decreaseGold(goldToRemove) {\r\n    this.gold -= goldToRemove;\r\n  }\r\n  movePlayer(newPosition) {\r\n    this.playerPosition = newPosition;\r\n  }\r\n  changeWeapon(newWeapon) {\r\n    let oldWeapon = this.weapon;\r\n    this.weapon = newWeapon;\r\n    this.playerInventory.push(oldWeapon);\r\n  }\r\n  changeWeaponFromMenu(newWeapon, index) {\r\n    let oldWeapon = this.weapon;\r\n    this.weapon = newWeapon;\r\n    this.playerInventory.push(oldWeapon);\r\n    this.playerInventory.splice(index, 1);\r\n  }\r\n  addMove(newMove) {\r\n    this.playerMoves.push(newMove);\r\n  }\r\n  drinkPotion(potion, index) {\r\n    if (potion.category === \"health\") {\r\n      this.currentHealth += potion.affect;\r\n      if (this.currentHealth > this.maxHealth) {\r\n        this.currentHealth = this.maxHealth;\r\n      }\r\n    } else if (potion.category === \"strength\") {\r\n    }\r\n    this.playerInventory.splice(index, 1);\r\n  }\r\n  addBlock(blockAmount) {\r\n    this.block += blockAmount;\r\n  }\r\n  endTurn() {\r\n    this.block = 0;\r\n    this.currentMana = this.maxMana;\r\n  }\r\n  decreaseCurrentMana(manaCost) {\r\n    this.currentMana -= manaCost;\r\n  }\r\n  handlePlayerDeath() {\r\n    this.playerName = \"\";\r\n    this.currentHealth = 25;\r\n    this.maxHealth = 25;\r\n    this.maxMana = 2;\r\n    this.currentMana = 2;\r\n    this.playerInventory = [];\r\n    this.playerMoves = [strike, defend];\r\n    this.playerPosition = 24;\r\n    this.weapon = dagger;\r\n    this.gold = 0;\r\n    this.block = 0;\r\n  }\r\n  fullHeal() {\r\n    this.currentHealth = this.maxHealth;\r\n  }\r\n\r\n  discardCard(moveToDiscard) {\r\n    this.playerMoves.splice(moveToDiscard, 1);\r\n  }\r\n\r\n  improveWeapon(category) {\r\n    if (category === \"Attack\") {\r\n      this.weapon.blockMultiplier -= 0.05;\r\n      this.weapon.damageMultiplier += 0.15;\r\n    } else if (category === \"Block\") {\r\n      this.weapon.damageMultiplier -= 0.05;\r\n      this.weapon.blockMultiplier += 0.15;\r\n    }\r\n\r\n    this.weapon.blockMultiplier = parseFloat(\r\n      this.weapon.blockMultiplier.toFixed(2)\r\n    );\r\n    this.weapon.damageMultiplier = parseFloat(\r\n      this.weapon.damageMultiplier.toFixed(2)\r\n    );\r\n  }\r\n\r\n  heavySmith(category) {\r\n    if (category === \"Attack\") {\r\n      this.weapon.blockMultiplier -= 0.2;\r\n      this.weapon.damageMultiplier += 0.15;\r\n    } else if (category === \"Block\") {\r\n      this.weapon.damageMultiplier -= 0.2;\r\n      this.weapon.blockMultiplier += 0.15;\r\n    }\r\n    this.weapon.blockMultiplier = parseFloat(\r\n      this.weapon.blockMultiplier.toFixed(2)\r\n    );\r\n    this.weapon.damageMultiplier = parseFloat(\r\n      this.weapon.damageMultiplier.toFixed(2)\r\n    );\r\n  }\r\n\r\n  increaseHealth(healthIncreasedBy) {\r\n    this.currentHealth += healthIncreasedBy;\r\n    if (this.currentHealth > this.maxHealth) {\r\n      this.currentHealth = this.maxHealth;\r\n    }\r\n  }\r\n}\r\n\r\nexport const player = new Player(\"\", 25, 2, [strike, defend], 24, dagger, 30);\r\n","class ShowScreen {\r\n  constructor(\r\n    createCharacter,\r\n    characterMoving,\r\n    characterFighting,\r\n    characterEvent,\r\n    characterRewards,\r\n    characterShop\r\n  ) {\r\n    this.createCharacter = createCharacter;\r\n    this.characterMoving = characterMoving;\r\n    this.characterFighting = characterFighting;\r\n    this.characterEvent = characterEvent;\r\n    this.characterRewards = characterRewards;\r\n    this.characterShop = characterShop;\r\n    this.characterDiscardCard = false;\r\n    this.characterRest = false;\r\n    this.randomEvent = false;\r\n    this.goToNextFloor = false;\r\n    this.characterDied = false;\r\n  }\r\n  makeAllValuesFalse() {\r\n    Object.keys(this).forEach((key) => {\r\n      this[key] = false;\r\n    });\r\n  }\r\n  moveCharacter() {\r\n    this.makeAllValuesFalse();\r\n    this.characterMoving = true;\r\n  }\r\n  fightScreen() {\r\n    this.makeAllValuesFalse();\r\n    this.characterFighting = true;\r\n  }\r\n  endFightScreen() {\r\n    this.characterFighting = false;\r\n    this.characterMoving = true;\r\n  }\r\n  showRewads() {\r\n    this.makeAllValuesFalse();\r\n    this.characterRewards = true;\r\n  }\r\n  endRewards() {\r\n    this.characterRewards = false;\r\n    this.characterMoving = true;\r\n  }\r\n  showShop() {\r\n    this.makeAllValuesFalse();\r\n    this.characterShop = true;\r\n  }\r\n  leaveShop() {\r\n    this.characterShop = false;\r\n    this.characterMoving = true;\r\n  }\r\n  discardCard() {\r\n    this.makeAllValuesFalse();\r\n    this.characterDiscardCard = true;\r\n  }\r\n  characterRestChoice() {\r\n    this.makeAllValuesFalse();\r\n    this.characterRest = true;\r\n  }\r\n  characterDeath() {\r\n    this.makeAllValuesFalse();\r\n    this.characterDied = true;\r\n  }\r\n  startANewGame() {\r\n    this.makeAllValuesFalse();\r\n    this.createCharacter = true;\r\n  }\r\n  showRandomEvent() {\r\n    this.makeAllValuesFalse();\r\n    this.randomEvent = true;\r\n  }\r\n  showOptionToGoToNextFloor() {\r\n    this.makeAllValuesFalse();\r\n    this.goToNextFloor = true;\r\n  }\r\n}\r\n\r\nexport var screen = new ShowScreen(true, false, false, false, false);\r\n","import React, { Component } from \"react\";\r\n\r\nclass MovesInventory extends Component {\r\n  state = {};\r\n\r\n  getClassName = (move) => {\r\n    let moveClass = \"movePreview \" + move.constructor.name;\r\n    return moveClass;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ul>\r\n        <li>\r\n          <b>Weapon:</b>\r\n        </li>\r\n        <li className=\"movePreview Weapon\">\r\n          <span>\r\n            {this.props.weapon.name}\r\n            <div className=\"hover-details\">\r\n              Dmg Multiplier: {this.props.weapon.damageMultiplier}\r\n              <br />\r\n              Block Multiplier: {this.props.weapon.blockMultiplier}\r\n              <br />\r\n              Category: {this.props.weapon.category}\r\n            </div>\r\n          </span>\r\n        </li>\r\n        <li>\r\n          <b>Moves:</b>\r\n        </li>\r\n        <ul>\r\n          {this.props.moves.map((move) => (\r\n            <li key={move.name} className={this.getClassName(move)}>\r\n              <span className=\"mana-cost\">{move.manaCost}</span> {move.name}\r\n              <br />\r\n              {move.constructor.name === \"Attack\" ? (\r\n                <span>\r\n                  Base Damage: {move.damage}X{move.amountOfHits}\r\n                </span>\r\n              ) : (\r\n                <span>Base Block: {move.blockAmount}</span>\r\n              )}\r\n              <div className=\"hover-details\">\r\n                Synergy: {move.synergyItem}\r\n                <br />\r\n                conflict: {move.conflictCategory}\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovesInventory;\r\n","class Treasure {\r\n  constructor(commonTreasure, commonIndex, rareTreasure, rareIndex) {\r\n    this.commonTreasure = commonTreasure;\r\n    this.commonIndex = commonIndex;\r\n    this.rareTreasure = rareTreasure;\r\n    this.rareIndex = rareIndex;\r\n    this.getTypeOfTreasure = \"Common\";\r\n    this.amountToShow = 3;\r\n  }\r\n  itemsToAddToTreasure(items) {\r\n    items.forEach(item => {\r\n      if (item.rarity === \"Common\") {\r\n        this.commonTreasure.push(item);\r\n      } else if (item.rarity === \"Rare\") {\r\n        this.rareTreasure.push(item);\r\n      }\r\n    });\r\n    this.commonTreasure = this.shuffleTreasure(this.commonTreasure);\r\n    this.rareTreasure = this.shuffleTreasure(this.rareTreasure);\r\n  }\r\n  shuffleTreasure(treasureArray) {\r\n    for (let i = treasureArray.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * i);\r\n      const temp = treasureArray[i];\r\n      treasureArray[i] = treasureArray[j];\r\n      treasureArray[j] = temp;\r\n    }\r\n    return treasureArray;\r\n  }\r\n  addToCommonTreasure(treasure) {\r\n    this.commonTreasure.push(treasure);\r\n  }\r\n  addToRareTreasure(treasure) {\r\n    this.rareTreasure.push(treasure);\r\n  }\r\n  getTreasure() {\r\n    var retTreasure = [];\r\n    let index = 0;\r\n    let treasureBySpecifiedType = [];\r\n    if (this.getTypeOfTreasure === \"Common\") {\r\n      index = this.commonIndex;\r\n      treasureBySpecifiedType = this.commonTreasure;\r\n    } else if (this.getTypeOfTreasure === \"Rare\") {\r\n      index = this.rareIndex;\r\n      treasureBySpecifiedType = this.rareTreasure;\r\n    }\r\n    for (let i = 0; i <= this.amountToShow - 1; i++) {\r\n      if (treasureBySpecifiedType[index] !== undefined) {\r\n        retTreasure.push(treasureBySpecifiedType[index]);\r\n      } else {\r\n        index = 0;\r\n        retTreasure.push(treasureBySpecifiedType[index]);\r\n      }\r\n      index++;\r\n    }\r\n    return retTreasure;\r\n  }\r\n  increaseIndex() {\r\n    if (this.getTypeOfTreasure === \"Rare\") {\r\n      this.rareIndex += this.amountToShow;\r\n      if (this.rareIndex > this.rareTreasure.length - 1) {\r\n        this.rareIndex = 0;\r\n      }\r\n    } else if (this.getTypeOfTreasure === \"Common\") {\r\n      this.commonIndex += this.amountToShow;\r\n      if (this.commonIndex > this.commonTreasure.length - 1) {\r\n        this.commonIndex = 0;\r\n      }\r\n    }\r\n  }\r\n  showCommon() {\r\n    this.getTypeOfTreasure = \"Common\";\r\n  }\r\n  showRare() {\r\n    this.getTypeOfTreasure = \"Rare\";\r\n  }\r\n  amountToBeShown(amount) {\r\n    this.amountToShow = amount;\r\n  }\r\n}\r\n\r\nexport var treasure = new Treasure([], 0, [], 0);\r\n","class Shop {\r\n  constructor(shopItems, itemIndex, itemsToShow) {\r\n    this.shopItems = shopItems;\r\n    this.itemIndex = itemIndex;\r\n    this.itemsToShow = itemsToShow;\r\n    this.isStillInShop = false;\r\n  }\r\n  itemsToAddToShop(items) {\r\n    items.forEach(item => {\r\n      this.shopItems.push(item);\r\n    });\r\n    this.shopItems = this.shuffleShop(this.shopItems);\r\n  }\r\n  shuffleShop(itemArray) {\r\n    for (let i = itemArray.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * i);\r\n      const temp = itemArray[i];\r\n      itemArray[i] = itemArray[j];\r\n      itemArray[j] = temp;\r\n    }\r\n    return itemArray;\r\n  }\r\n  getShopItems() {\r\n    var retItems = [];\r\n    let index = this.itemIndex;\r\n    for (let i = 0; i <= this.itemsToShow - 1; i++) {\r\n      if (this.shopItems[index] !== undefined) {\r\n        retItems.push(this.shopItems[index]);\r\n      } else if (this.shopItems.length < 4) {\r\n        return retItems;\r\n      } else {\r\n        index = 0;\r\n        retItems.push(this.shopItems[index]);\r\n      }\r\n      index++;\r\n    }\r\n    return retItems;\r\n  }\r\n  increaseIndex() {\r\n    this.itemIndex += 4;\r\n    if (this.itemIndex > this.shopItems.length - 1) {\r\n      this.itemIndex = 0;\r\n    }\r\n  }\r\n  decreaseItemsToShow() {\r\n    this.itemsToShow--;\r\n  }\r\n  resetItemsToShow() {\r\n    this.itemsToShow = 4;\r\n  }\r\n  stillInShop() {\r\n    this.isStillInShop = true;\r\n  }\r\n}\r\n\r\nexport const shop = new Shop([], 0, 4);\r\n","export class boardObject {\r\n  constructor(width, height) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.board = Array(width * height).fill(\"\");\r\n    this.bossPosition = 0;\r\n    this.level = 1;\r\n  }\r\n\r\n  changeBoardSquare(square, index) {\r\n    this.board[index] = square;\r\n  }\r\n\r\n  setBossPosition(position) {\r\n    this.bossPosition = position;\r\n  }\r\n\r\n  nextLevel() {\r\n    this.level += 1;\r\n    this.increaseDimensions();\r\n    this.board = Array(this.width * this.height).fill(\"\");\r\n  }\r\n\r\n  increaseDimensions() {\r\n    if (this.level === 2) {\r\n      this.width = 7;\r\n      this.height = 5;\r\n    } else if (this.level === 3) {\r\n      this.width = 7;\r\n      this.height = 7;\r\n    } else if (this.level === 4) {\r\n      this.width = 9;\r\n      this.height = 7;\r\n    }\r\n  }\r\n\r\n  getCurrentLevel() {\r\n    return this.level;\r\n  }\r\n}\r\n","export class activityObject {\r\n  constructor(bigActivitiesArray) {\r\n    this.activityArray = [];\r\n    this.activityIndex = 0;\r\n    this.bigActivitiesArray = bigActivitiesArray;\r\n    this.bigIndex = 0;\r\n  }\r\n  addToArrayXTimes(item, iterationAmount) {\r\n    for (let i = 0; i < iterationAmount; i++) {\r\n      this.activityArray.push(item);\r\n    }\r\n  }\r\n  getActivity() {\r\n    return this.activityArray[this.activityIndex++];\r\n  }\r\n  getBigActivity() {\r\n    return this.bigActivitiesArray[this.bigIndex++];\r\n  }\r\n  resetActivitiesIndex() {\r\n    this.activityIndex = 0;\r\n  }\r\n}\r\n","export class MonsterContainerObject {\r\n  constructor() {\r\n    this.monsterArray = [];\r\n    this.lastMonster = \"\";\r\n  }\r\n  addMonsters(monsters) {\r\n    monsters.forEach(monster => {\r\n      if (!(monster.level in this.monsterArray)) {\r\n        this.monsterArray[monster.level] = Array(monster);\r\n      } else {\r\n        this.monsterArray[monster.level].push(monster);\r\n      }\r\n    });\r\n  }\r\n  getMonster(level) {\r\n    let isUniqueMonster = false;\r\n    let retMonster = \"\";\r\n    while (!isUniqueMonster) {\r\n      retMonster = this.monsterArray[level][\r\n        Math.floor(Math.random() * this.monsterArray[level].length)\r\n      ];\r\n      if (this.lastMonster !== retMonster.name) {\r\n        isUniqueMonster = true;\r\n      }\r\n    }\r\n    this.lastMonster = retMonster.name;\r\n    return retMonster;\r\n  }\r\n}\r\n","export class BossContainerObject {\r\n  constructor() {\r\n    this.enemies = [];\r\n  }\r\n  addEnemies(enemies) {\r\n    enemies.forEach(enemy => {\r\n      if (!(enemy.level in this.enemies)) {\r\n        this.enemies[enemy.level] = Array(enemy);\r\n      } else {\r\n        this.enemies[enemy.level].push(enemy);\r\n      }\r\n    });\r\n  }\r\n  getEnemy(level) {\r\n    return this.enemies[level][\r\n      Math.floor(Math.random() * this.enemies[level].length)\r\n    ];\r\n  }\r\n}\r\n","export class RandomEventEnemyContainer {\r\n  constructor() {\r\n    this.enemies = {};\r\n  }\r\n  addEnemies(enemies) {\r\n    enemies.forEach(enemy => {\r\n      this.enemies[enemy.level] = enemy;\r\n    });\r\n  }\r\n  getEnemy(level) {\r\n    return this.enemies[level];\r\n  }\r\n}\r\n","class Potion {\r\n  constructor(name, category, affect) {\r\n    this.name = name;\r\n    this.category = category;\r\n    this.affect = affect;\r\n  }\r\n}\r\n\r\nexport const healingPotion = new Potion(\"Healing Potion\", \"health\", 10);\r\nconst strengthPotion = new Potion(\"Strength Potion\", \"strength\", 2);\r\n\r\nexport const potions = [healingPotion, strengthPotion];\r\n","import { playerMoveArray } from \"./moves\";\r\nimport { weaponArray } from \"./weapons\";\r\nimport { player } from \"./playerConstant\";\r\nimport { healingPotion } from \"./itemConstants\";\r\n\r\nclass RandomEventHolder {\r\n  constructor(randomEvents) {\r\n    this.randomEvents = randomEvents;\r\n    this.randomEventIndex = 0;\r\n  }\r\n  getRandomEvent() {\r\n    return this.randomEvents[this.randomEventIndex];\r\n  }\r\n  increaseRandomEventCounter() {\r\n    this.randomEventIndex += 1;\r\n    if (this.randomEventIndex >= this.randomEvents.length) {\r\n      this.randomEventIndex = 0;\r\n    }\r\n  }\r\n  randomizeEvents() {\r\n    for (let i = this.randomEvents.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * i);\r\n      const temp = this.randomEvents[i];\r\n      this.randomEvents[i] = this.randomEvents[j];\r\n      this.randomEvents[j] = temp;\r\n    }\r\n  }\r\n}\r\n\r\nclass RandomEvents {\r\n  constructor(description, options, effects, category) {\r\n    this.description = description;\r\n    this.options = options;\r\n    this.effects = effects;\r\n    this.category = category;\r\n  }\r\n}\r\n\r\nconst heavySmither = new RandomEvents(\r\n  \"A Smith Lord from the far region area offers you the chance to enhance your weapon \" +\r\n    \"greatly in one category, but will vastly impact your weapon performance in the other category\",\r\n  [\r\n    \"Increase Damage Multiplier by 0.15, Decrease Block Multiplier by 0.20\",\r\n    \"Increase Block Multiplier by 0.15, Decrease Damage Multiplier by 0.20\",\r\n    \"Walk Away\",\r\n    \"Fight him for his Equipment\"\r\n  ],\r\n  [\"HeavyDamageIncrease\", \"HeavyBlockIncrease\", \"WalkAway\", \"FightSmither\"],\r\n  \"HeavySmither\"\r\n);\r\n\r\nlet randomWeaponNumbers = getRandomNumbers(weaponArray.length);\r\n\r\nconst salesMan = new RandomEvents(\r\n  \"A Bargener from the local shop wants to sell you a weapon... for some of your blood\",\r\n  [\r\n    \"Take \" +\r\n      weaponArray[randomWeaponNumbers[0]].name +\r\n      \" for \" +\r\n      weaponArray[randomWeaponNumbers[0]].cost / 10 +\r\n      \" health\",\r\n    \"Take \" +\r\n      weaponArray[randomWeaponNumbers[1]].name +\r\n      \" for \" +\r\n      weaponArray[randomWeaponNumbers[1]].cost / 10 +\r\n      \" health\",\r\n    \"Walk Away\"\r\n  ],\r\n  [\r\n    weaponArray[randomWeaponNumbers[0]],\r\n    weaponArray[randomWeaponNumbers[1]],\r\n    \"WalkAway\"\r\n  ],\r\n  \"HpLossForWeapon\"\r\n);\r\n\r\nlet randomMoveNumbers = getRandomNumbers(playerMoveArray.length);\r\n\r\nconst freeMove = new RandomEvents(\r\n  \"Its your lucky day! choose one move for free :)\",\r\n  [\r\n    \"Attain \" + playerMoveArray[randomMoveNumbers[0]].name,\r\n    \"Attain \" + playerMoveArray[randomMoveNumbers[1]].name,\r\n    \"Walk Away\"\r\n  ],\r\n  [\r\n    playerMoveArray[randomMoveNumbers[0]],\r\n    playerMoveArray[randomMoveNumbers[1]],\r\n    \"WalkAway\"\r\n  ],\r\n  \"FreeMove\"\r\n);\r\n\r\nconst travelingBed = new RandomEvents(\r\n  \"A Traveling Bed approaches you with the chance to heal, but with a hefty fine baby\",\r\n  [\r\n    \"Heal \" + Math.floor(player.maxHealth * 0.25) + \" health for 50 coins\",\r\n    \"Heal \" + Math.floor(player.maxHealth * 0.5) + \" health for 100 coins\",\r\n    \"Walk Away\"\r\n  ],\r\n  [\"quarterHeal\", \"halfHeal\", \"WalkAway\"],\r\n  \"HealingForCoins\"\r\n);\r\n\r\nconst freePotion = new RandomEvents(\r\n  \"A free potion, literally\",\r\n  [\"Take FREE Health Potion\", \"Walk Away\"],\r\n  [healingPotion, \"WalkAway\"],\r\n  \"FreePotion\"\r\n);\r\n\r\nfunction getRandomNumbers(lengthOfArray) {\r\n  let keepLooping = true;\r\n\r\n  let randomNumbers = [];\r\n  while (keepLooping) {\r\n    let randomNumber = Math.floor(Math.random() * Math.floor(lengthOfArray));\r\n    if (randomNumbers[0] !== null && randomNumbers[0] !== randomNumber) {\r\n      randomNumbers.push(randomNumber);\r\n      if (randomNumbers.length === 2) {\r\n        keepLooping = false;\r\n      }\r\n    }\r\n  }\r\n  return randomNumbers;\r\n}\r\n\r\nconst randomEvents = [\r\n  freeMove,\r\n  heavySmither,\r\n  salesMan,\r\n  travelingBed,\r\n  freePotion\r\n];\r\n\r\nexport const randomEventHolder = new RandomEventHolder(randomEvents);\r\n","import React, { Component } from \"react\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\nimport GameBoard from \"./gameBoard\";\r\nimport Player from \"./player\";\r\nimport TreasureChest from \"./treasureChest\";\r\nimport Inventory from \"./inventory\";\r\nimport Shop from \"./shop\";\r\nimport DiscardCard from \"./discardCard\";\r\nimport RestChoice from \"./restChoice\";\r\nimport RandomEvent from \"./randomEvent\";\r\nimport FightBoard from \"./fightBoard\";\r\nimport { enemies, bosses, randomEventMonsters } from \"../constants/monsters\";\r\nimport { player } from \"../constants/playerConstant\";\r\nimport { screen } from \"../constants/showScreen\";\r\nimport MovesInventory from \"./movesInventory\";\r\nimport { playerMoveArray } from \"../constants/moves\";\r\nimport { weaponArray } from \"../constants/weapons\";\r\nimport { treasure } from \"../constants/treasure\";\r\nimport { shop } from \"../constants/shop\";\r\nimport { boardObject } from \"../constants/boardObject\";\r\nimport { activityObject } from \"../constants/activityObject\";\r\nimport { MonsterContainerObject } from \"../constants/monsterContainerObject\";\r\nimport { BossContainerObject } from \"../constants/bossContainerObject\";\r\nimport { RandomEventEnemyContainer } from \"../constants/randomEventEnemyContainer\";\r\nimport { randomEventHolder } from \"../constants/randomEvents\";\r\n\r\n/*\r\nTODO:\r\nmonsters shoudl be strong or weak against moves or categories\r\nmight have to make enemies more powerful\r\n*/\r\n\r\nclass Game extends Component {\r\n  state = {\r\n    player: player,\r\n    enemiesContainer: null,\r\n    bossContainer: null,\r\n    randomEventEnemiesContainer: null,\r\n    currentEnemy: null,\r\n    screen: screen,\r\n    gameBoard: null,\r\n    chatMessage: \"\",\r\n    treasure: treasure,\r\n    shop: shop,\r\n    randomEvents: randomEventHolder,\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    let player = this.state.player;\r\n    player.setPlayerName(event.target.value);\r\n    this.setState({ player });\r\n  };\r\n\r\n  randomizer(itemArray) {\r\n    for (let i = itemArray.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * i);\r\n      const temp = itemArray[i];\r\n      itemArray[i] = itemArray[j];\r\n      itemArray[j] = temp;\r\n    }\r\n    return itemArray;\r\n  }\r\n\r\n  getDirections() {\r\n    let directions = [\"NE\", \"NW\", \"SW\", \"SE\"];\r\n    directions = this.randomizer(directions);\r\n    directions.splice(3, 1);\r\n    return directions;\r\n  }\r\n\r\n  createDirections(direction, width, height) {\r\n    let stepDirections = [];\r\n    for (let i = 0; i < height / 2 - 1; i++) {\r\n      stepDirections.push(direction.substr(0, 1));\r\n    }\r\n    for (let i = 0; i < width / 2 - 1; i++) {\r\n      stepDirections.push(direction.substr(1, 2));\r\n    }\r\n    stepDirections = this.randomizer(stepDirections);\r\n    if (\r\n      stepDirections[0] === direction.substr(1, 2) &&\r\n      stepDirections[1] === direction.substr(1, 2) &&\r\n      stepDirections[2] === direction.substr(1, 2)\r\n    ) {\r\n      let swapIndex = stepDirections.indexOf(direction.substr(0, 1));\r\n      let temp = stepDirections[2];\r\n      stepDirections[2] = stepDirections[swapIndex];\r\n      stepDirections[swapIndex] = temp;\r\n    }\r\n    return stepDirections;\r\n  }\r\n\r\n  createPath(gameBoard, direction, activitiesObject) {\r\n    activitiesObject.activityArray = this.randomizer(\r\n      activitiesObject.activityArray\r\n    );\r\n    let stepDirections = this.createDirections(\r\n      direction,\r\n      gameBoard.width,\r\n      gameBoard.height\r\n    );\r\n    let position = (gameBoard.board.length - 1) / 2;\r\n    stepDirections.forEach((step) => {\r\n      switch (step) {\r\n        case \"N\":\r\n          position -= gameBoard.width;\r\n          break;\r\n        case \"S\":\r\n          position += gameBoard.width;\r\n          break;\r\n        case \"W\":\r\n          position -= 1;\r\n          break;\r\n        case \"E\":\r\n          position += 1;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      gameBoard.changeBoardSquare(activitiesObject.getActivity(), position);\r\n    });\r\n    gameBoard.changeBoardSquare(activitiesObject.getBigActivity(), position);\r\n    activitiesObject.resetActivitiesIndex();\r\n    return gameBoard;\r\n  }\r\n\r\n  handlePrimaryIterations(\r\n    gameBoard,\r\n    startingValue,\r\n    greaterThanValue,\r\n    iterationValue,\r\n    bossSpacer,\r\n    activitiesObject\r\n  ) {\r\n    let bossPlacement = Math.floor(Math.random() * bossSpacer) + 1;\r\n    let bossIndex = 0;\r\n    for (let i = startingValue; i < greaterThanValue; i += iterationValue) {\r\n      gameBoard.changeBoardSquare(activitiesObject.getActivity(), i);\r\n      if (bossIndex === bossPlacement) {\r\n        gameBoard.changeBoardSquare(\"⚔️\", i);\r\n        gameBoard.setBossPosition(i);\r\n      }\r\n      bossIndex++;\r\n    }\r\n    return gameBoard;\r\n  }\r\n\r\n  connectPrimaries(gameBoard, primaryDirections, activitiesObject) {\r\n    if (primaryDirections.includes(\"NE\") && primaryDirections.includes(\"NW\")) {\r\n      gameBoard = this.handlePrimaryIterations(\r\n        gameBoard,\r\n        1,\r\n        gameBoard.width - 1,\r\n        1,\r\n        (gameBoard.width - 1) / 2,\r\n        activitiesObject\r\n      );\r\n    } else if (\r\n      primaryDirections.includes(\"NE\") &&\r\n      primaryDirections.includes(\"SE\")\r\n    ) {\r\n      gameBoard = this.handlePrimaryIterations(\r\n        gameBoard,\r\n        gameBoard.width * 2 - 1,\r\n        gameBoard.width * gameBoard.height - 1,\r\n        gameBoard.width,\r\n        (gameBoard.height - 1) / 2,\r\n        activitiesObject\r\n      );\r\n    } else if (\r\n      primaryDirections.includes(\"SW\") &&\r\n      primaryDirections.includes(\"SE\")\r\n    ) {\r\n      gameBoard = this.handlePrimaryIterations(\r\n        gameBoard,\r\n        gameBoard.board.length - gameBoard.width + 1,\r\n        gameBoard.board.length - 1,\r\n        1,\r\n        (gameBoard.width - 1) / 2,\r\n        activitiesObject\r\n      );\r\n    } else if (\r\n      primaryDirections.includes(\"SW\") &&\r\n      primaryDirections.includes(\"NW\")\r\n    ) {\r\n      gameBoard = this.handlePrimaryIterations(\r\n        gameBoard,\r\n        gameBoard.width,\r\n        gameBoard.width * (gameBoard.height - 1),\r\n        gameBoard.width,\r\n        (gameBoard.height - 1) / 2,\r\n        activitiesObject\r\n      );\r\n    }\r\n    return gameBoard;\r\n  }\r\n\r\n  createBoard(primaryDirections, secondaryDirection, gameBoard) {\r\n    let bigActivities = [\"🛏️\", \"🎊\", \"🛒\"];\r\n    let activitiesObject = new activityObject(bigActivities);\r\n    let spacesPerDirection =\r\n      Math.floor(gameBoard.width / 2) + Math.floor(gameBoard.height / 2);\r\n    //activitiesObject.addToArrayXTimes(\" \", 1);\r\n    activitiesObject.addToArrayXTimes(\"?\", Math.floor(spacesPerDirection / 2));\r\n    activitiesObject.addToArrayXTimes(\"🗡️\", spacesPerDirection);\r\n    activitiesObject.addToArrayXTimes(\r\n      \"💰\",\r\n      Math.floor(spacesPerDirection / 2) - 1\r\n    );\r\n    bigActivities = this.randomizer(bigActivities);\r\n    primaryDirections.forEach((direction) => {\r\n      gameBoard = this.createPath(gameBoard, direction, activitiesObject);\r\n    });\r\n    gameBoard = this.connectPrimaries(\r\n      gameBoard,\r\n      primaryDirections,\r\n      activitiesObject\r\n    );\r\n    gameBoard = this.createPath(\r\n      gameBoard,\r\n      secondaryDirection,\r\n      activitiesObject\r\n    );\r\n    return gameBoard;\r\n  }\r\n\r\n  createFloor(gameBoard) {\r\n    let boardDirections = this.getDirections();\r\n    let primaryDirections = [];\r\n    primaryDirections.push(boardDirections.splice(0, 1).toString());\r\n\r\n    switch (primaryDirections[0]) {\r\n      case \"NE\":\r\n        if (boardDirections.includes(\"SE\") && boardDirections.includes(\"NW\")) {\r\n          let randomNumberOneOrTwo = Math.floor(Math.random() * 2);\r\n          primaryDirections.push(\r\n            boardDirections.splice(randomNumberOneOrTwo, 1).toString()\r\n          );\r\n        } else if (boardDirections.includes(\"SE\")) {\r\n          primaryDirections.push(\r\n            boardDirections.splice(boardDirections.indexOf(\"SE\"), 1).toString()\r\n          );\r\n        } else if (boardDirections.includes(\"NW\")) {\r\n          primaryDirections.push(\r\n            boardDirections.splice(boardDirections.indexOf(\"NW\"), 1).toString()\r\n          );\r\n        }\r\n        break;\r\n      case \"SE\":\r\n        if (boardDirections.includes(\"SW\") && boardDirections.includes(\"NE\")) {\r\n          let randomNumberOneOrTwo = Math.floor(Math.random() * 2);\r\n          primaryDirections.push(\r\n            boardDirections.splice(randomNumberOneOrTwo, 1).toString()\r\n          );\r\n        } else if (boardDirections.includes(\"SW\")) {\r\n          primaryDirections.push(\r\n            boardDirections.splice(boardDirections.indexOf(\"SW\"), 1).toString()\r\n          );\r\n        } else if (boardDirections.includes(\"NE\")) {\r\n          primaryDirections.push(\r\n            boardDirections.splice(boardDirections.indexOf(\"NE\"), 1).toString()\r\n          );\r\n        }\r\n        break;\r\n      case \"SW\":\r\n        if (boardDirections.includes(\"SE\") && boardDirections.includes(\"NW\")) {\r\n          let randomNumberOneOrTwo = Math.floor(Math.random() * 2);\r\n\r\n          primaryDirections.push(\r\n            boardDirections.splice(randomNumberOneOrTwo, 1).toString()\r\n          );\r\n        } else if (boardDirections.includes(\"SE\")) {\r\n          primaryDirections.push(\r\n            boardDirections.splice(boardDirections.indexOf(\"SE\"), 1).toString()\r\n          );\r\n        } else if (boardDirections.includes(\"NW\")) {\r\n          primaryDirections.push(\r\n            boardDirections.splice(boardDirections.indexOf(\"NW\"), 1).toString()\r\n          );\r\n        }\r\n        break;\r\n      case \"NW\":\r\n        if (boardDirections.includes(\"SW\") && boardDirections.includes(\"NE\")) {\r\n          let randomNumberOneOrTwo = Math.floor(Math.random() * 2);\r\n          primaryDirections.push(\r\n            boardDirections.splice(randomNumberOneOrTwo, 1).toString()\r\n          );\r\n        } else if (boardDirections.includes(\"SW\")) {\r\n          primaryDirections.push(\r\n            boardDirections.splice(boardDirections.indexOf(\"SW\"), 1).toString()\r\n          );\r\n        } else if (boardDirections.includes(\"NE\")) {\r\n          primaryDirections.push(\r\n            boardDirections.splice(boardDirections.indexOf(\"NE\"), 1).toString()\r\n          );\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    let secondaryDirection = boardDirections[0];\r\n    gameBoard = this.createBoard(\r\n      primaryDirections,\r\n      secondaryDirection,\r\n      gameBoard\r\n    );\r\n    gameBoard.changeBoardSquare(\"🧑\", player.playerPosition);\r\n    return gameBoard;\r\n  }\r\n\r\n  startGame = () => {\r\n    let player = this.state.player;\r\n    let screen = this.state.screen;\r\n    let treasure = this.state.treasure;\r\n    let shop = this.state.shop;\r\n    let enemiesContainer = new MonsterContainerObject();\r\n    let bossContainer = new BossContainerObject();\r\n    let randomEventEnemiesContainer = new RandomEventEnemyContainer();\r\n    let randomEvents = this.state.randomEvents;\r\n    enemiesContainer.addMonsters(enemies);\r\n    bossContainer.addEnemies(bosses);\r\n    randomEventEnemiesContainer.addEnemies(randomEventMonsters);\r\n    const itemsArray = [...playerMoveArray, ...weaponArray];\r\n    treasure.itemsToAddToTreasure(itemsArray);\r\n    shop.itemsToAddToShop(itemsArray);\r\n    screen.moveCharacter();\r\n    let gameBoard = new boardObject(5, 5);\r\n    player.playerPosition = (gameBoard.board.length - 1) / 2;\r\n    gameBoard = this.createFloor(gameBoard);\r\n    randomEvents.randomizeEvents();\r\n    this.setState({\r\n      screen,\r\n      treasure,\r\n      shop,\r\n      player,\r\n      gameBoard,\r\n      enemiesContainer,\r\n      bossContainer,\r\n      randomEventEnemiesContainer,\r\n      randomEvents,\r\n      chatMessage: \"\",\r\n    });\r\n  };\r\n\r\n  addToChatBox = (message) => {\r\n    let chatMessage = this.state.chatMessage;\r\n    chatMessage += message + \"\\n\";\r\n    this.setState({ chatMessage }, () => {\r\n      try {\r\n        var textarea = document.getElementById(\"chat_id\");\r\n        textarea.scrollTop = textarea.scrollHeight;\r\n      } catch {}\r\n    });\r\n  };\r\n\r\n  handleSquareProperty = (square) => {\r\n    let player = this.state.player;\r\n    let screen = this.state.screen;\r\n    switch (square) {\r\n      case \"💰\":\r\n        player.increaseGold(15);\r\n        this.setState({ player });\r\n        this.addToChatBox(\"found gold\");\r\n        break;\r\n      case \"?\":\r\n        screen.showRandomEvent();\r\n        break;\r\n      case \"🗡️\":\r\n        screen.fightScreen();\r\n        let currentEnemy = cloneDeep(\r\n          this.state.enemiesContainer.getMonster(\r\n            this.state.gameBoard.getCurrentLevel()\r\n          )\r\n        );\r\n        this.setState({ currentEnemy, screen });\r\n        break;\r\n      case \"🎊\":\r\n        screen.showRewads();\r\n        let treasure = this.state.treasure;\r\n        treasure.showCommon();\r\n        treasure.amountToBeShown(3);\r\n        this.addToChatBox(player.playerName + \" found lootations \");\r\n        this.setState({ screen, treasure });\r\n        break;\r\n      case \"🛒\":\r\n        screen.showShop();\r\n        this.addToChatBox(player.playerName + \" found a shop\");\r\n        this.setState({ screen });\r\n        break;\r\n      case \"🛏️\":\r\n        screen.characterRestChoice();\r\n        this.setState({ screen });\r\n        break;\r\n      case \"⚔️\":\r\n        screen.fightScreen();\r\n        let boss = cloneDeep(\r\n          this.state.bossContainer.getEnemy(\r\n            this.state.gameBoard.getCurrentLevel()\r\n          )\r\n        );\r\n        this.setState({ currentEnemy: boss, screen });\r\n        break;\r\n      case \"🚪\":\r\n        screen.showOptionToGoToNextFloor();\r\n        this.setState({ screen });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  checkIfLegalMovement = (proposedPosition, playerPosition, square) => {\r\n    if (\r\n      (proposedPosition === playerPosition + 1 ||\r\n        proposedPosition === playerPosition - 1 ||\r\n        proposedPosition === playerPosition + this.state.gameBoard.width ||\r\n        proposedPosition === playerPosition - this.state.gameBoard.width) &&\r\n      square !== \"\"\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  movePlayer(position, square) {\r\n    this.handleSquareProperty(square);\r\n    let gameBoard = this.state.gameBoard;\r\n    let player = this.state.player;\r\n    if (player.playerPosition === this.state.gameBoard.bossPosition) {\r\n      gameBoard.changeBoardSquare(\"🚪\", player.playerPosition);\r\n    } else {\r\n      gameBoard.changeBoardSquare(\" \", player.playerPosition);\r\n    }\r\n    gameBoard.changeBoardSquare(\"🧑\", position);\r\n    player.movePlayer(position);\r\n    this.setState({ gameBoard, player });\r\n  }\r\n\r\n  handleMovement = (position, square) => {\r\n    if (\r\n      this.checkIfLegalMovement(\r\n        position,\r\n        this.state.player.playerPosition,\r\n        square\r\n      )\r\n    ) {\r\n      this.movePlayer(position, square);\r\n    }\r\n  };\r\n\r\n  checkIfLegalSquare = (position) => {\r\n    let gameBoard = this.state.gameBoard;\r\n    if (position < 0 || position >= gameBoard.board.length) {\r\n      return false;\r\n    } else if (gameBoard.board[position] === \"\") {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  arrowKeyMovement = (e) => {\r\n    if (this.state.screen.characterMoving === true) {\r\n      let position = this.state.player.playerPosition;\r\n      let square = \"\";\r\n      switch (e.key) {\r\n        case \"ArrowUp\":\r\n          position -= this.state.gameBoard.width;\r\n          break;\r\n        case \"ArrowDown\":\r\n          position += this.state.gameBoard.width;\r\n          break;\r\n        case \"ArrowLeft\":\r\n          position -= 1;\r\n          break;\r\n        case \"ArrowRight\":\r\n          position += 1;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      if (this.checkIfLegalSquare(position)) {\r\n        square = this.state.gameBoard.board[position];\r\n        this.movePlayer(position, square);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleInventoryClick = (item, index) => {\r\n    let player = this.state.player;\r\n    if (item.constructor.name === \"Potion\") {\r\n      player.drinkPotion(item, index);\r\n    } else if (item.constructor.name === \"Weapon\") {\r\n      player.changeWeaponFromMenu(item, index);\r\n    }\r\n    this.setState({ player });\r\n  };\r\n\r\n  checkIfDead(health) {\r\n    if (health > 0) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  handleEnemyAttack(enemyMove, playersBlock, enemyWeapon) {\r\n    let player = this.state.player;\r\n    let currentEnemy = this.state.currentEnemy;\r\n    let message = \"\";\r\n    currentEnemy.resetBlock();\r\n    let damage = this.calculateDamage(enemyMove, enemyWeapon);\r\n    playersBlock -= damage;\r\n    if (playersBlock < 0) {\r\n      player.currentHealth += playersBlock;\r\n      message +=\r\n        player.playerName +\r\n        \" was hit for \" +\r\n        playersBlock * -1 +\r\n        \" damage by \" +\r\n        this.state.currentEnemy.name +\r\n        \"'s \" +\r\n        enemyMove.name;\r\n    } else {\r\n      message += player.playerName + \" blocked all damage\";\r\n    }\r\n    let isPlayerDead = this.checkIfDead(player.currentHealth);\r\n    if (isPlayerDead) {\r\n      let screen = this.state.screen;\r\n      screen.characterDeath();\r\n      this.setState({ screen, currentEnemy });\r\n      message +=\r\n        \"\\n\" + player.playerName + \" was slain by \" + currentEnemy.name;\r\n    } else {\r\n      player.endTurn();\r\n      currentEnemy.goToNextMove();\r\n      this.setState({ player, currentEnemy });\r\n    }\r\n    this.addToChatBox(message);\r\n  }\r\n\r\n  handleEnemyBlock(enemyMove, enemyWeapon) {\r\n    let currentEnemy = this.state.currentEnemy;\r\n    let enemyBlock = this.calculateBlock(enemyMove, enemyWeapon);\r\n    currentEnemy.resetBlock();\r\n    currentEnemy.increaseBlock(enemyBlock);\r\n    player.endTurn();\r\n    currentEnemy.goToNextMove();\r\n    this.addToChatBox(currentEnemy.name + \" Increased block by \" + enemyBlock);\r\n    this.setState({ player, currentEnemy });\r\n  }\r\n\r\n  handleEnemyCard = (enemyMove, playersBlock, enemyWeapon) => {\r\n    switch (enemyMove.constructor.name) {\r\n      case \"Attack\":\r\n        this.handleEnemyAttack(enemyMove, playersBlock, enemyWeapon);\r\n        break;\r\n      case \"Block\":\r\n        this.handleEnemyBlock(enemyMove, enemyWeapon);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  calculateBlock(move, weapon) {\r\n    let block = Math.floor(move.blockAmount * weapon.blockMultiplier);\r\n    if (weapon.name === move.synergyItem) {\r\n      block = Math.ceil(block * 1.5);\r\n    } else if (weapon.category === move.conflictCategory) {\r\n      block = Math.floor(block * 0.75);\r\n    }\r\n    return block;\r\n  }\r\n\r\n  handleBlockCardClick = (playerMove, playerWeapon) => {\r\n    let player = this.state.player;\r\n    let block = this.calculateBlock(playerMove, playerWeapon);\r\n    player.addBlock(block);\r\n    let message = player.playerName + \" increased block by \" + block;\r\n    player.decreaseCurrentMana(playerMove.manaCost);\r\n    this.setState({ player });\r\n    this.addToChatBox(message);\r\n  };\r\n\r\n  handleEnemyDeath(currentEnemy) {\r\n    let screen = this.state.screen;\r\n    let treasure = this.state.treasure;\r\n    let player = this.state.player;\r\n    player.increaseGold(currentEnemy.getMoneyDropped());\r\n    if (currentEnemy.isABoss) {\r\n      screen.showRewads();\r\n      treasure.showRare();\r\n      treasure.amountToBeShown(3);\r\n    } else {\r\n      screen.showRewads();\r\n      treasure.showCommon();\r\n      treasure.amountToBeShown(2);\r\n    }\r\n    currentEnemy = \"\";\r\n    this.setState({\r\n      screen,\r\n      currentEnemy,\r\n      treasure,\r\n      player,\r\n    });\r\n  }\r\n\r\n  calculateDamage(move, weapon) {\r\n    let damage = Math.floor(move.damage * weapon.damageMultiplier);\r\n    if (weapon.name === move.synergyItem) {\r\n      damage = Math.ceil(damage * 1.5);\r\n    } else if (weapon.category === move.conflictCategory) {\r\n      damage = Math.floor(damage * 0.75);\r\n    }\r\n    return Math.floor(damage * move.amountOfHits);\r\n  }\r\n\r\n  handleAttackCardClick = (currentEnemy, playerMove, playerWeapon) => {\r\n    let player = this.state.player;\r\n    let message = \"\";\r\n    player.decreaseCurrentMana(playerMove.manaCost);\r\n    let damage = this.calculateDamage(playerMove, playerWeapon);\r\n    let enemyBlock = currentEnemy.block;\r\n    enemyBlock -= damage;\r\n    if (enemyBlock < 0) {\r\n      currentEnemy.currentHealth += enemyBlock;\r\n      message +=\r\n        this.state.player.playerName +\r\n        \" hit \" +\r\n        currentEnemy.name +\r\n        \" for \" +\r\n        enemyBlock * -1;\r\n      currentEnemy.resetBlock();\r\n    } else {\r\n      message += \"Enemy blocked attack\";\r\n      currentEnemy.setBlock(enemyBlock);\r\n    }\r\n    let isEnemyDead = this.checkIfDead(currentEnemy.currentHealth);\r\n    if (isEnemyDead) {\r\n      this.handleEnemyDeath(currentEnemy);\r\n      player.endTurn();\r\n      message += \"\\n\" + currentEnemy.name + \" was slain\";\r\n    } else {\r\n      this.setState({ currentEnemy });\r\n    }\r\n    this.addToChatBox(message);\r\n  };\r\n\r\n  handleDiscard = (moveToDiscard) => {\r\n    let player = this.state.player;\r\n    let screen = this.state.screen;\r\n    player.discardCard(moveToDiscard);\r\n    if (this.state.shop.isStillInShop) {\r\n      screen.showShop();\r\n    } else {\r\n      screen.moveCharacter();\r\n    }\r\n    this.setState({ player, screen });\r\n  };\r\n\r\n  handlePlayerInventory() {\r\n    let screen = this.state.screen;\r\n    screen.discardCard();\r\n    this.setState({ screen });\r\n  }\r\n\r\n  handleTreasureClick = (treasureItem) => {\r\n    let player = this.state.player;\r\n    let screen = this.state.screen;\r\n    let treasure = this.state.treasure;\r\n    if (\r\n      treasureItem.constructor.name === \"Attack\" ||\r\n      treasureItem.constructor.name === \"Block\"\r\n    ) {\r\n      player.addMove(treasureItem);\r\n      if (player.playerMoves.length > 4) {\r\n        this.handlePlayerInventory();\r\n      }\r\n    } else if (treasureItem.constructor.name === \"Weapon\") {\r\n      let weapon = cloneDeep(treasureItem);\r\n      player.changeWeapon(weapon);\r\n    }\r\n    screen.endRewards();\r\n    treasure.increaseIndex();\r\n    this.setState({ player, screen, treasure });\r\n  };\r\n\r\n  handleNoTreasureClick = () => {\r\n    let screen = this.state.screen;\r\n    let treasure = this.state.treasure;\r\n    screen.endRewards();\r\n    treasure.increaseIndex();\r\n    this.setState({ screen, treasure });\r\n  };\r\n\r\n  handleShopClick = (shopItem, index) => {\r\n    if (this.state.player.gold >= shopItem.cost) {\r\n      let player = this.state.player;\r\n      let shop = this.state.shop;\r\n      switch (shopItem.constructor.name) {\r\n        case \"Attack\":\r\n          player.addMove(shopItem);\r\n          if (player.playerMoves.length > 4) {\r\n            shop.stillInShop();\r\n            this.handlePlayerInventory();\r\n          }\r\n          break;\r\n        case \"Block\":\r\n          player.addMove(shopItem);\r\n          if (player.playerMoves.length > 4) {\r\n            shop.stillInShop();\r\n            this.handlePlayerInventory();\r\n          }\r\n          break;\r\n        case \"Weapon\":\r\n          let weapon = cloneDeep(shopItem);\r\n          player.changeWeapon(weapon);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      player.decreaseGold(shopItem.cost);\r\n      shop.shopItems.splice(index, 1);\r\n      shop.decreaseItemsToShow();\r\n      this.setState({ player, shop });\r\n    } else {\r\n      this.addToChatBox(\"Cant afford \" + shopItem.name);\r\n    }\r\n  };\r\n\r\n  handleExitShopClick = () => {\r\n    let screen = this.state.screen;\r\n    let shop = this.state.shop;\r\n    shop.resetItemsToShow();\r\n    screen.leaveShop();\r\n    this.setState({ screen });\r\n  };\r\n\r\n  handleRestClick = (player) => {\r\n    player.fullHeal();\r\n    let screen = this.state.screen;\r\n    screen.moveCharacter();\r\n    this.addToChatBox(Player.playerName + \" healed for full\");\r\n    this.setState({ screen, player });\r\n  };\r\n\r\n  handleSmithClick = (player, category, weaponName) => {\r\n    player.improveWeapon(category);\r\n    let screen = this.state.screen;\r\n    screen.moveCharacter();\r\n    this.addToChatBox(Player.playerName + \" Improved \" + weaponName);\r\n    this.setState({ screen, player });\r\n  };\r\n\r\n  handleRandomEventClick = (eventAction, eventCategory) => {\r\n    let screen = this.state.screen;\r\n    let randomEvents = this.state.randomEvents;\r\n    let player = this.state.player;\r\n    let backToBoard = true;\r\n    let stayInEvent = false;\r\n    if (eventAction !== \"WalkAway\") {\r\n      switch (eventCategory) {\r\n        case \"HeavySmither\":\r\n          if (eventAction === \"HeavyDamageIncrease\") {\r\n            player.heavySmith(\"Attack\");\r\n          } else if (eventAction === \"HeavyBlockIncrease\") {\r\n            player.heavySmith(\"Block\");\r\n          } else if (eventAction === \"FightSmither\") {\r\n            let currentEnemy = this.state.randomEventEnemiesContainer.getEnemy(\r\n              \"Smith\"\r\n            );\r\n            screen.fightScreen();\r\n            backToBoard = false;\r\n            this.setState({ currentEnemy });\r\n          }\r\n          break;\r\n        case \"HpLossForWeapon\":\r\n          player.changeWeapon(eventAction);\r\n          player.currentHealth -= eventAction.cost / 10;\r\n          if (this.checkIfDead(player.currentHealth)) {\r\n            player.handlePlayerDeath();\r\n            screen.characterDeath();\r\n            backToBoard = false;\r\n          }\r\n          break;\r\n        case \"FreeMove\":\r\n          player.addMove(eventAction);\r\n          if (player.playerMoves.length > 4) {\r\n            this.handlePlayerInventory();\r\n            backToBoard = false;\r\n          }\r\n          break;\r\n        case \"HealingForCoins\":\r\n          if (eventAction === \"quarterHeal\" && player.gold >= 50) {\r\n            player.increaseHealth(Math.floor(player.maxHealth / 4));\r\n          } else if (eventAction === \"halfHeal\" && player.gold >= 50) {\r\n            player.increaseHealth(Math.floor(player.maxHealth / 2));\r\n          } else {\r\n            this.addToChatBox(\"Item too expensive\");\r\n            backToBoard = false;\r\n            stayInEvent = true;\r\n          }\r\n          break;\r\n        case \"FreePotion\":\r\n          player.addToInventory(eventAction);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    if (!stayInEvent) {\r\n      randomEvents.increaseRandomEventCounter();\r\n    }\r\n    if (backToBoard) {\r\n      screen.moveCharacter();\r\n    }\r\n    this.setState({ screen, randomEvents, player });\r\n  };\r\n\r\n  handleGoToNextFloor = () => {\r\n    let gameBoard = this.state.gameBoard;\r\n    let player = this.state.player;\r\n    let screen = this.state.screen;\r\n    gameBoard.nextLevel();\r\n    player.fullHeal();\r\n    player.playerPosition = (gameBoard.board.length - 1) / 2;\r\n    gameBoard = this.createFloor(gameBoard);\r\n    screen.moveCharacter();\r\n    this.setState({ gameBoard, player, screen });\r\n  };\r\n\r\n  handleCancelGoingToNextFloor = () => {\r\n    let screen = this.state.screen;\r\n    screen.moveCharacter();\r\n    this.setState({ screen });\r\n  };\r\n\r\n  contactMe = () => {\r\n    console.log(\"heyo\");\r\n  };\r\n\r\n  playAgain = () => {\r\n    let player = this.state.player;\r\n    let screen = this.state.screen;\r\n    player.handlePlayerDeath();\r\n    screen.startANewGame();\r\n    this.setState({ player, screen });\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.arrowKeyMovement);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.arrowKeyMovement);\r\n  }\r\n\r\n  render() {\r\n    const disableStart = this.state.player.playerName === \"\";\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        {this.state.screen.createCharacter ? (\r\n          <div className=\"homepage-centering\">\r\n            <div>\r\n              <h1>GAME NAME</h1>\r\n            </div>\r\n            <div className=\"player-name-input \">\r\n              <input\r\n                type=\"text\"\r\n                name=\"playerName\"\r\n                className=\"form-control\"\r\n                value={this.state.playerName}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Enter Name And Start Game\"\r\n                onKeyPress={(event) => {\r\n                  if (event.key === \"Enter\" && !disableStart) {\r\n                    this.startGame();\r\n                  }\r\n                }}\r\n              ></input>\r\n              <div className=\"home-buttons\">\r\n                <button\r\n                  onClick={this.startGame}\r\n                  disabled={disableStart}\r\n                  className=\"btn btn-danger mr-2\"\r\n                >\r\n                  Start Game\r\n                </button>\r\n                <button\r\n                  onClick={this.contactMe}\r\n                  className=\"btn btn-primary ml-2\"\r\n                >\r\n                  Contact Me!\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"game-container\">\r\n            <div className=\"row first-row\">\r\n              <div className=\"col-12 player-header\">\r\n                <Player\r\n                  playerName={this.state.player.playerName}\r\n                  maxHealth={this.state.player.maxHealth}\r\n                  currentHealth={this.state.player.currentHealth}\r\n                  gold={this.state.player.gold}\r\n                  level={this.state.gameBoard.level}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {this.state.screen.characterFighting ||\r\n            this.state.screen.characterDiscardCard ? (\r\n              <div className=\"row second-row\">\r\n                <div className=\"col-12 fightBoard-div\">\r\n                  {this.state.screen.characterFighting && (\r\n                    <FightBoard\r\n                      enemy={this.state.currentEnemy}\r\n                      onAttackCardClick={this.handleAttackCardClick}\r\n                      onBlockCardClick={this.handleBlockCardClick}\r\n                      onEnemyAttack={this.handleEnemyCard}\r\n                      playerMoves={this.state.player.playerMoves}\r\n                      playerWeapon={this.state.player.weapon}\r\n                      currentMana={this.state.player.currentMana}\r\n                      maxMana={this.state.player.maxMana}\r\n                      block={this.state.player.block}\r\n                      handleChatBox={this.addToChatBox}\r\n                    />\r\n                  )}\r\n                  {this.state.screen.characterDiscardCard && (\r\n                    <DiscardCard\r\n                      weapon={this.state.player.weapon}\r\n                      moves={this.state.player.playerMoves}\r\n                      onDiscard={this.handleDiscard}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"row gameplay second-row\">\r\n                <div className=\"col-2\">\r\n                  <MovesInventory\r\n                    weapon={this.state.player.weapon}\r\n                    moves={this.state.player.playerMoves}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-8 main-component\">\r\n                  {this.state.screen.characterMoving && (\r\n                    <div className=\"flexit\">\r\n                      <GameBoard\r\n                        gameBoard={this.state.gameBoard.board}\r\n                        boardWidth={this.state.gameBoard.width}\r\n                        playerMovement={this.handleMovement}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  {this.state.screen.characterRewards && (\r\n                    <TreasureChest\r\n                      treasure={this.state.treasure}\r\n                      onTreasureClick={this.handleTreasureClick}\r\n                      onNoTreasure={this.handleNoTreasureClick}\r\n                    />\r\n                  )}\r\n                  {this.state.screen.characterShop && (\r\n                    <Shop\r\n                      shop={this.state.shop}\r\n                      playersMoney={this.state.player.gold}\r\n                      onShopClick={this.handleShopClick}\r\n                      exitShop={this.handleExitShopClick}\r\n                    />\r\n                  )}\r\n                  {this.state.screen.characterRest && (\r\n                    <RestChoice\r\n                      player={this.state.player}\r\n                      weapon={this.state.player.weapon}\r\n                      onRestClick={this.handleRestClick}\r\n                      onSmithClick={this.handleSmithClick}\r\n                    />\r\n                  )}\r\n                  {this.state.screen.randomEvent && (\r\n                    <RandomEvent\r\n                      randomEvent={this.state.randomEvents}\r\n                      onEventClick={this.handleRandomEventClick}\r\n                    />\r\n                  )}\r\n                  {this.state.screen.characterDied && (\r\n                    <div className=\"death-screen\">\r\n                      <div>\r\n                        <div className=\"death-header\">\r\n                          <h1>{this.state.player.playerName} Died</h1>\r\n                        </div>\r\n                        <div>\r\n                          <button\r\n                            onClick={() => this.playAgain()}\r\n                            className=\"btn btn-primary\"\r\n                          >\r\n                            Play Again\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  {this.state.screen.goToNextFloor && (\r\n                    <div className=\"show-floor-options\">\r\n                      <div\r\n                        className=\"floor-choice\"\r\n                        onClick={this.handleGoToNextFloor}\r\n                      >\r\n                        Go TO Next Floor\r\n                      </div>\r\n                      <div\r\n                        className=\"floor-choice\"\r\n                        onClick={this.handleCancelGoingToNextFloor}\r\n                      >\r\n                        Cancel\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"col-2 inventory\">\r\n                  <Inventory\r\n                    playerInventory={this.state.player.playerInventory}\r\n                    onInventoryClick={this.handleInventoryClick}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n            <div className=\"row third-row\">\r\n              <div className=\"col-3\"></div>\r\n              <div className=\"col-6\">\r\n                <textarea\r\n                  value={this.state.chatMessage}\r\n                  disabled\r\n                  rows=\"4\"\r\n                  id=\"chat_id\"\r\n                  className=\"chatbox\"\r\n                ></textarea>\r\n              </div>\r\n              <div className=\"col-3\"></div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Game from \"./components/game\";\r\n\r\nfunction App() {\r\n  return <Game />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/sword5.1e834a22.png\";","module.exports = __webpack_public_path__ + \"static/media/shield3.99ed922a.png\";"],"sourceRoot":""}